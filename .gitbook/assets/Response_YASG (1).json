{
    "swagger": "2.0",
    "info": {
        "title": "Snippets API",
        "description": "Test description",
        "termsOfService": "https://www.google.com/policies/terms/",
        "contact": {
            "email": "contact@snippets.local"
        },
        "license": {
            "name": "BSD License"
        },
        "version": "v1"
    },
    "host": "localhost:8000",
    "schemes": [
        "http"
    ],
    "basePath": "/zmc_service",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "securityDefinitions": {
        "api_key": {
            "in": "header",
            "name": "Authorization",
            "type": "http"
        }
    },
    "security": [
        {
            "api_key": []
        }
    ],
    "paths": {
        "/backupsets/": {
            "get": {
                "operationId": "backupsets_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BackupSet"
                            }
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "post": {
                "operationId": "backupsets_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupSet"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupSet"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "parameters": []
        },
        "/backupsets/abort_backup/": {
            "post": {
                "operationId": "backupsets_abort_backup_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupAbort"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupAbort"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "parameters": []
        },
        "/backupsets/backup/": {
            "post": {
                "operationId": "backupsets_backup_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupNow"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupNow"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "parameters": []
        },
        "/backupsets/backup_media/action/{backup_media_id}/": {
            "get": {
                "operationId": "backupsets_backup_media_action_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupMediaOperations"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "put": {
                "operationId": "backupsets_backup_media_action_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupMediaOperations"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupMediaOperations"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "patch": {
                "operationId": "backupsets_backup_media_action_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupMediaOperations"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupMediaOperations"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "parameters": [
                {
                    "name": "backup_media_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/backupsets/backup_media/persist_backup_media_details/": {
            "post": {
                "operationId": "backupsets_backup_media_persist_backup_media_details_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "parameters": []
        },
        "/backupsets/backup_media/{backup_media_id}/abort_labelling/": {
            "post": {
                "operationId": "backupsets_backup_media_abort_labelling_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LabelBackupMedia"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LabelBackupMedia"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "put": {
                "operationId": "backupsets_backup_media_abort_labelling_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LabelBackupMedia"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LabelBackupMedia"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "parameters": [
                {
                    "name": "backup_media_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/backupsets/backup_media/{backup_media_id}/abort_scanning/": {
            "get": {
                "operationId": "backupsets_backup_media_abort_scanning_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ScanSlots"
                            }
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "post": {
                "operationId": "backupsets_backup_media_abort_scanning_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ScanSlots"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ScanSlots"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "parameters": [
                {
                    "name": "backup_media_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/backupsets/backup_media/{backup_media_id}/config_update/": {
            "put": {
                "operationId": "backupsets_backup_media_config_update_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupMediaConfigUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupMediaConfigUpdate"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "patch": {
                "operationId": "backupsets_backup_media_config_update_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupMediaConfigUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupMediaConfigUpdate"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "parameters": [
                {
                    "name": "backup_media_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/backupsets/backup_media/{backup_media_id}/label_tapes/": {
            "post": {
                "operationId": "backupsets_backup_media_label_tapes_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LabelBackupMedia"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LabelBackupMedia"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "put": {
                "operationId": "backupsets_backup_media_label_tapes_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LabelBackupMedia"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LabelBackupMedia"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "parameters": [
                {
                    "name": "backup_media_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/backupsets/backup_media/{backup_media_id}/scan_all_slots/": {
            "get": {
                "operationId": "backupsets_backup_media_scan_all_slots_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ScanSlots"
                            }
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "post": {
                "operationId": "backupsets_backup_media_scan_all_slots_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ScanSlots"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ScanSlots"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "parameters": [
                {
                    "name": "backup_media_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/backupsets/backup_media/{backupset_id}/": {
            "get": {
                "operationId": "backupsets_backup_media_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupMediaOperations"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "put": {
                "operationId": "backupsets_backup_media_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupMediaOperations"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupMediaOperations"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "patch": {
                "operationId": "backupsets_backup_media_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupMediaOperations"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupMediaOperations"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "parameters": [
                {
                    "name": "backupset_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/backupsets/backup_running/{backupset_id}": {
            "get": {
                "operationId": "backupsets_backup_running_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "parameters": [
                {
                    "name": "backupset_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/backupsets/backup_where/": {
            "get": {
                "operationId": "backupsets_backup_where_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BackupWhere"
                            }
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "post": {
                "operationId": "backupsets_backup_where_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupWhere"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupWhere"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "put": {
                "operationId": "backupsets_backup_where_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupWhere"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupWhere"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "parameters": []
        },
        "/backupsets/backup_where_tape/mtx/{backupset_id}/{ae_server_id}": {
            "get": {
                "operationId": "backupsets_backup_where_tape_mtx_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "parameters": [
                {
                    "name": "ae_server_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "backupset_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/backupsets/clone_backupset/": {
            "get": {
                "operationId": "backupsets_clone_backupset_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BackupSetClone"
                            }
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "post": {
                "operationId": "backupsets_clone_backupset_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupSetClone"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupSetClone"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "parameters": []
        },
        "/backupsets/config_synced/{backupset_id}": {
            "put": {
                "operationId": "backupsets_config_synced_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupSet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupSet"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "patch": {
                "operationId": "backupsets_config_synced_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupSet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupSet"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "parameters": [
                {
                    "name": "backupset_id",
                    "in": "path",
                    "description": "A unique integer value identifying this backup set.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/backupsets/delete_backupset/{backupset_id}/": {
            "get": {
                "operationId": "backupsets_delete_backupset_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupSet"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "put": {
                "operationId": "backupsets_delete_backupset_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupSet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupSet"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "patch": {
                "operationId": "backupsets_delete_backupset_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupSet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupSet"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "delete": {
                "operationId": "backupsets_delete_backupset_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "parameters": [
                {
                    "name": "backupset_id",
                    "in": "path",
                    "description": "A unique integer value identifying this backup set.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/backupsets/dle_state/": {
            "post": {
                "operationId": "backupsets_dle_state_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "parameters": []
        },
        "/backupsets/get_backupset/{backupset_id}/": {
            "get": {
                "operationId": "backupsets_get_backupset_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupSet"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "put": {
                "operationId": "backupsets_get_backupset_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupSet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupSet"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "patch": {
                "operationId": "backupsets_get_backupset_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupSet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupSet"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "delete": {
                "operationId": "backupsets_get_backupset_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "parameters": [
                {
                    "name": "backupset_id",
                    "in": "path",
                    "description": "A unique integer value identifying this backup set.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/backupsets/get_backupset_how/{backupset_id}/": {
            "get": {
                "operationId": "backupsets_get_backupset_how_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupsetHow"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "put": {
                "operationId": "backupsets_get_backupset_how_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupsetHow"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupsetHow"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "patch": {
                "operationId": "backupsets_get_backupset_how_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupsetHow"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupsetHow"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "parameters": [
                {
                    "name": "backupset_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/backupsets/get_backupset_when/{backupset_id}/": {
            "get": {
                "operationId": "backupsets_get_backupset_when_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupsetWhen"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "put": {
                "operationId": "backupsets_get_backupset_when_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupsetWhen"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupsetWhen"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "patch": {
                "operationId": "backupsets_get_backupset_when_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupsetWhen"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupsetWhen"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "parameters": [
                {
                    "name": "backupset_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/backupsets/holding_list_refresh/{backupset_id}/": {
            "get": {
                "operationId": "backupsets_holding_list_refresh_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupStaging"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "parameters": [
                {
                    "name": "backupset_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/backupsets/lsscsi_output/{ae_server_id}": {
            "get": {
                "operationId": "backupsets_lsscsi_output_read",
                "description": "FetchLSSCSIOutput provides a method to fetch the LSSCSI output from the backup server.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "parameters": [
                {
                    "name": "ae_server_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/backupsets/populate_monitor/": {
            "get": {
                "operationId": "backupsets_populate_monitor_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "parameters": []
        },
        "/backupsets/schedule-activate/{backupset_id}/": {
            "get": {
                "operationId": "backupsets_schedule-activate_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupSet"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "put": {
                "operationId": "backupsets_schedule-activate_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupSet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupSet"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "patch": {
                "operationId": "backupsets_schedule-activate_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupSet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupSet"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "delete": {
                "operationId": "backupsets_schedule-activate_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "parameters": [
                {
                    "name": "backupset_id",
                    "in": "path",
                    "description": "A unique integer value identifying this backup set.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/backupsets/schedule/{backupset_id}/": {
            "get": {
                "operationId": "backupsets_schedule_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupSet"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "put": {
                "operationId": "backupsets_schedule_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupSet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupSet"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "patch": {
                "operationId": "backupsets_schedule_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupSet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupSet"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "delete": {
                "operationId": "backupsets_schedule_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "parameters": [
                {
                    "name": "backupset_id",
                    "in": "path",
                    "description": "A unique integer value identifying this backup set.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/backupsets/scheduled_dle_state/": {
            "post": {
                "operationId": "backupsets_scheduled_dle_state_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "parameters": []
        },
        "/backupsets/staging_fetch/{backupset_id}/": {
            "get": {
                "operationId": "backupsets_staging_fetch_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupStaging"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "put": {
                "operationId": "backupsets_staging_fetch_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupStaging"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupStaging"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "patch": {
                "operationId": "backupsets_staging_fetch_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupStaging"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupStaging"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "parameters": [
                {
                    "name": "backupset_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/backupsets/staging_update/{backupset_id}/": {
            "get": {
                "operationId": "backupsets_staging_update_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupStaging"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "put": {
                "operationId": "backupsets_staging_update_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupStaging"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupStaging"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "patch": {
                "operationId": "backupsets_staging_update_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupStaging"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupStaging"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "parameters": [
                {
                    "name": "backupset_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/backupsets/start_flush/": {
            "post": {
                "operationId": "backupsets_start_flush_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupFlush"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupFlush"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "parameters": []
        },
        "/backupsets/tapemigration/": {
            "post": {
                "operationId": "backupsets_tapemigration_create",
                "description": "This view is used for migration and upgrade. To update the storage and backup where configs for tapes",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "parameters": []
        },
        "/backupsets/task/{task_id}/": {
            "get": {
                "operationId": "backupsets_task_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "parameters": [
                {
                    "name": "task_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/backupsets/update_backupset/{backupset_id}/": {
            "get": {
                "operationId": "backupsets_update_backupset_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupSet"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "put": {
                "operationId": "backupsets_update_backupset_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupSet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupSet"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "patch": {
                "operationId": "backupsets_update_backupset_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupSet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupSet"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "delete": {
                "operationId": "backupsets_update_backupset_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "parameters": [
                {
                    "name": "backupset_id",
                    "in": "path",
                    "description": "A unique integer value identifying this backup set.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/backupsets/update_backupset_how/{backupset_id}/": {
            "get": {
                "operationId": "backupsets_update_backupset_how_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupsetHow"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "put": {
                "operationId": "backupsets_update_backupset_how_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupsetHow"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupsetHow"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "patch": {
                "operationId": "backupsets_update_backupset_how_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupsetHow"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupsetHow"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "parameters": [
                {
                    "name": "backupset_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/backupsets/update_backupset_when/{backupset_id}/": {
            "get": {
                "operationId": "backupsets_update_backupset_when_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupsetWhen"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "put": {
                "operationId": "backupsets_update_backupset_when_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupsetWhen"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupsetWhen"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "patch": {
                "operationId": "backupsets_update_backupset_when_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupsetWhen"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupsetWhen"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "parameters": [
                {
                    "name": "backupset_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/backupsets/where_fetch/{backupset_id}/": {
            "get": {
                "operationId": "backupsets_where_fetch_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupWhere"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "post": {
                "operationId": "backupsets_where_fetch_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupWhere"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupWhere"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "put": {
                "operationId": "backupsets_where_fetch_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupWhere"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupWhere"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "parameters": [
                {
                    "name": "backupset_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/backupsets/where_update/{backupset_id}/": {
            "get": {
                "operationId": "backupsets_where_update_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupWhere"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "post": {
                "operationId": "backupsets_where_update_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupWhere"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupWhere"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "put": {
                "operationId": "backupsets_where_update_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupWhere"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupWhere"
                        }
                    }
                },
                "tags": [
                    "backupsets"
                ]
            },
            "parameters": [
                {
                    "name": "backupset_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/common/tag/": {
            "get": {
                "operationId": "common_tag_list",
                "description": "TagCreateView provides a view to create a Tag\nand get the list of all Tags.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Tag"
                            }
                        }
                    }
                },
                "tags": [
                    "common"
                ]
            },
            "post": {
                "operationId": "common_tag_create",
                "description": "Mechanism to create a new Tag",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Tag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Tag"
                        }
                    }
                },
                "tags": [
                    "common"
                ]
            },
            "parameters": []
        },
        "/common/tag/all/": {
            "get": {
                "operationId": "common_tag_all_read",
                "description": "Mechanism to get details of all available tags",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Tag"
                        }
                    }
                },
                "tags": [
                    "common"
                ]
            },
            "parameters": []
        },
        "/common/tag/{tag_id}": {
            "get": {
                "operationId": "common_tag_read",
                "description": "Mechanism to fetch details an existing Tag object. Pass Tag ID as URL param",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Tag"
                        }
                    }
                },
                "tags": [
                    "common"
                ]
            },
            "put": {
                "operationId": "common_tag_update",
                "description": "Mechanism to modify an existing Tag object. Pass Tag ID as URL param",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Tag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Tag"
                        }
                    }
                },
                "tags": [
                    "common"
                ]
            },
            "patch": {
                "operationId": "common_tag_partial_update",
                "description": "TagDetailView provides a view to get, modify or delete an Tag object.\nEach Tag object is uniquely identified by 'tag_id' field that needs to be passed\nto perform any operation from this class.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Tag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Tag"
                        }
                    }
                },
                "tags": [
                    "common"
                ]
            },
            "delete": {
                "operationId": "common_tag_delete",
                "description": "This method defines the HTTP DELETE mechanism to remove an existing Tag object.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "common"
                ]
            },
            "parameters": [
                {
                    "name": "tag_id",
                    "in": "path",
                    "description": "A unique integer value identifying this tag.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/config/customconfig/": {
            "get": {
                "operationId": "config_customconfig_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CustomConfig"
                            }
                        }
                    }
                },
                "tags": [
                    "config"
                ]
            },
            "put": {
                "operationId": "config_customconfig_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CustomConfig"
                        }
                    }
                },
                "tags": [
                    "config"
                ]
            },
            "parameters": []
        },
        "/config/customconfig/{name}/": {
            "get": {
                "operationId": "config_customconfig_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CustomConfig"
                        }
                    }
                },
                "tags": [
                    "config"
                ]
            },
            "parameters": [
                {
                    "name": "name",
                    "in": "path",
                    "description": "A unique value identifying this custom config.",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/dashboard/backupruns/": {
            "get": {
                "operationId": "dashboard_backupruns_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "dashboard"
                ]
            },
            "parameters": []
        },
        "/dashboard/backupserverhealth/": {
            "get": {
                "operationId": "dashboard_backupserverhealth_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "dashboard"
                ]
            },
            "parameters": []
        },
        "/dashboard/backupset/": {
            "get": {
                "operationId": "dashboard_backupset_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "dashboard"
                ]
            },
            "parameters": []
        },
        "/dashboard/devicedetails/": {
            "get": {
                "operationId": "dashboard_devicedetails_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "dashboard"
                ]
            },
            "parameters": []
        },
        "/dashboard/eventmessages/": {
            "get": {
                "operationId": "dashboard_eventmessages_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "dashboard"
                ]
            },
            "parameters": []
        },
        "/dashboard/nextscheduledbackup/": {
            "get": {
                "operationId": "dashboard_nextscheduledbackup_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "dashboard"
                ]
            },
            "parameters": []
        },
        "/dashboard/serverdetails/": {
            "get": {
                "operationId": "dashboard_serverdetails_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "dashboard"
                ]
            },
            "parameters": []
        },
        "/events/": {
            "get": {
                "operationId": "events_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Event"
                            }
                        }
                    }
                },
                "tags": [
                    "events"
                ]
            },
            "post": {
                "operationId": "events_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    }
                },
                "tags": [
                    "events"
                ]
            },
            "parameters": []
        },
        "/events/audit/list/": {
            "get": {
                "operationId": "events_audit_list_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Event"
                            }
                        }
                    }
                },
                "tags": [
                    "events"
                ]
            },
            "parameters": []
        },
        "/events/{event_id}/": {
            "get": {
                "operationId": "events_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    }
                },
                "tags": [
                    "events"
                ]
            },
            "put": {
                "operationId": "events_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    }
                },
                "tags": [
                    "events"
                ]
            },
            "patch": {
                "operationId": "events_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    }
                },
                "tags": [
                    "events"
                ]
            },
            "delete": {
                "operationId": "events_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "events"
                ]
            },
            "parameters": [
                {
                    "name": "event_id",
                    "in": "path",
                    "description": "A unique integer value identifying this event.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/license/devices_used_by_backupset/": {
            "get": {
                "operationId": "license_devices_used_by_backupset_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DevicesUsed"
                            }
                        }
                    }
                },
                "tags": [
                    "license"
                ]
            },
            "post": {
                "operationId": "license_devices_used_by_backupset_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DevicesUsed"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DevicesUsed"
                        }
                    }
                },
                "tags": [
                    "license"
                ]
            },
            "parameters": []
        },
        "/license/license_checker/": {
            "get": {
                "operationId": "license_license_checker_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "license"
                ]
            },
            "parameters": []
        },
        "/license/licenses_used_by_feature/": {
            "get": {
                "operationId": "license_licenses_used_by_feature_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LicenseFeaturesUsed"
                            }
                        }
                    }
                },
                "tags": [
                    "license"
                ]
            },
            "post": {
                "operationId": "license_licenses_used_by_feature_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LicenseFeaturesUsed"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LicenseFeaturesUsed"
                        }
                    }
                },
                "tags": [
                    "license"
                ]
            },
            "parameters": []
        },
        "/license/uploadlicense/": {
            "post": {
                "operationId": "license_uploadlicense_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "license"
                ]
            },
            "parameters": []
        },
        "/license/viewlicense/": {
            "get": {
                "operationId": "license_viewlicense_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "license"
                ]
            },
            "parameters": []
        },
        "/monitor/": {
            "get": {
                "operationId": "monitor_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BackupRunSummary"
                            }
                        }
                    }
                },
                "tags": [
                    "monitor"
                ]
            },
            "parameters": []
        },
        "/monitor/all/report/": {
            "get": {
                "operationId": "monitor_all_report_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BackupRunReport"
                            }
                        }
                    }
                },
                "tags": [
                    "monitor"
                ]
            },
            "parameters": []
        },
        "/monitor/report/dataintegrity/": {
            "get": {
                "operationId": "monitor_report_dataintegrity_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "monitor"
                ]
            },
            "post": {
                "operationId": "monitor_report_dataintegrity_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "monitor"
                ]
            },
            "parameters": []
        },
        "/monitor/report/dataintegrity/label/{backupset_id}/": {
            "get": {
                "operationId": "monitor_report_dataintegrity_label_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "monitor"
                ]
            },
            "parameters": [
                {
                    "name": "backupset_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/monitor/report/dataintegrity/{backupset_id}/": {
            "get": {
                "operationId": "monitor_report_dataintegrity_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "monitor"
                ]
            },
            "post": {
                "operationId": "monitor_report_dataintegrity_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "monitor"
                ]
            },
            "parameters": [
                {
                    "name": "backupset_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/monitor/report/presetstate/": {
            "get": {
                "operationId": "monitor_report_presetstate_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PresetTemplateState"
                            }
                        }
                    }
                },
                "tags": [
                    "monitor"
                ]
            },
            "post": {
                "operationId": "monitor_report_presetstate_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PresetTemplateState"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PresetTemplateState"
                        }
                    }
                },
                "tags": [
                    "monitor"
                ]
            },
            "parameters": []
        },
        "/monitor/report/store-backuprun-reports": {
            "post": {
                "operationId": "monitor_report_store-backuprun-reports_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "monitor"
                ]
            },
            "parameters": []
        },
        "/monitor/report/template": {
            "get": {
                "operationId": "monitor_report_template_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupRunTemplates"
                        }
                    }
                },
                "tags": [
                    "monitor"
                ]
            },
            "post": {
                "operationId": "monitor_report_template_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupRunTemplates"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupRunTemplates"
                        }
                    }
                },
                "tags": [
                    "monitor"
                ]
            },
            "put": {
                "operationId": "monitor_report_template_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupRunTemplates"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupRunTemplates"
                        }
                    }
                },
                "tags": [
                    "monitor"
                ]
            },
            "patch": {
                "operationId": "monitor_report_template_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupRunTemplates"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupRunTemplates"
                        }
                    }
                },
                "tags": [
                    "monitor"
                ]
            },
            "delete": {
                "operationId": "monitor_report_template_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "monitor"
                ]
            },
            "parameters": []
        },
        "/monitor/report/template/{template_id}": {
            "get": {
                "operationId": "monitor_report_template_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupRunTemplates"
                        }
                    }
                },
                "tags": [
                    "monitor"
                ]
            },
            "post": {
                "operationId": "monitor_report_template_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupRunTemplates"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupRunTemplates"
                        }
                    }
                },
                "tags": [
                    "monitor"
                ]
            },
            "put": {
                "operationId": "monitor_report_template_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupRunTemplates"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupRunTemplates"
                        }
                    }
                },
                "tags": [
                    "monitor"
                ]
            },
            "patch": {
                "operationId": "monitor_report_template_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupRunTemplates"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupRunTemplates"
                        }
                    }
                },
                "tags": [
                    "monitor"
                ]
            },
            "delete": {
                "operationId": "monitor_report_template_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "monitor"
                ]
            },
            "parameters": [
                {
                    "name": "template_id",
                    "in": "path",
                    "description": "A unique integer value identifying this backup run templates.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/monitor/report/{runtype}/{date}/": {
            "get": {
                "operationId": "monitor_report_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupRunReport"
                        }
                    }
                },
                "tags": [
                    "monitor"
                ]
            },
            "put": {
                "operationId": "monitor_report_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupRunReport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupRunReport"
                        }
                    }
                },
                "tags": [
                    "monitor"
                ]
            },
            "patch": {
                "operationId": "monitor_report_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupRunReport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupRunReport"
                        }
                    }
                },
                "tags": [
                    "monitor"
                ]
            },
            "delete": {
                "operationId": "monitor_report_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "monitor"
                ]
            },
            "parameters": [
                {
                    "name": "date",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "runtype",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/monitor/report/{runtype}/{date}/{backupset}": {
            "get": {
                "operationId": "monitor_report_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BackupRunReport"
                            }
                        }
                    }
                },
                "tags": [
                    "monitor"
                ]
            },
            "parameters": [
                {
                    "name": "backupset",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "date",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "runtype",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/monitor/report/{runtype}/{year}/{month}/{backupset_id}/": {
            "get": {
                "operationId": "monitor_report_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupRunReport"
                        }
                    }
                },
                "tags": [
                    "monitor"
                ]
            },
            "parameters": [
                {
                    "name": "backupset_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "month",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "runtype",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "year",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/monitor/reports/customreports/": {
            "post": {
                "operationId": "monitor_reports_customreports_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomReport"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CustomReport"
                        }
                    }
                },
                "tags": [
                    "monitor"
                ]
            },
            "parameters": []
        },
        "/monitor/sync/all/": {
            "post": {
                "operationId": "monitor_sync_all_create",
                "description": "This view is used to sync monitor table entries after upgrades.",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "monitor"
                ]
            },
            "parameters": []
        },
        "/monitor/task/{task_id}/": {
            "get": {
                "operationId": "monitor_task_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "monitor"
                ]
            },
            "parameters": [
                {
                    "name": "task_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/monitor/{backuprun_id}/": {
            "get": {
                "operationId": "monitor_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupRunSummary"
                        }
                    }
                },
                "tags": [
                    "monitor"
                ]
            },
            "put": {
                "operationId": "monitor_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupRunSummary"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupRunSummary"
                        }
                    }
                },
                "tags": [
                    "monitor"
                ]
            },
            "patch": {
                "operationId": "monitor_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupRunSummary"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BackupRunSummary"
                        }
                    }
                },
                "tags": [
                    "monitor"
                ]
            },
            "delete": {
                "operationId": "monitor_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "monitor"
                ]
            },
            "parameters": [
                {
                    "name": "backuprun_id",
                    "in": "path",
                    "description": "A unique integer value identifying this backup run summary.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/restore/": {
            "get": {
                "operationId": "restore_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Restore"
                            }
                        }
                    }
                },
                "tags": [
                    "restore"
                ]
            },
            "post": {
                "operationId": "restore_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Restore"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Restore"
                        }
                    }
                },
                "tags": [
                    "restore"
                ]
            },
            "parameters": []
        },
        "/restore/amgetindex/": {
            "post": {
                "operationId": "restore_amgetindex_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Amgetindex"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Amgetindex"
                        }
                    }
                },
                "tags": [
                    "restore"
                ]
            },
            "parameters": []
        },
        "/restore/discover_vmware/": {
            "post": {
                "operationId": "restore_discover_vmware_create",
                "description": "This method defines the HTTP POST mechanism to discover VMWare server(s).\n:param request: request payload\n:return: HTTP response containing JSON\nand HTTP status for the POSTed request",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VMWareDiscover"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/VMWareDiscover"
                        }
                    }
                },
                "tags": [
                    "restore"
                ]
            },
            "parameters": []
        },
        "/restore/hosts/": {
            "post": {
                "operationId": "restore_hosts_create",
                "description": "This method defines the HTTP POST mechanism to fetch backup hosts details asscociated with backupset.\n:param request: request payload\n:param args: positional arguments\n:return: HTTP response containing newly created filesystem source JSON\nand HTTP status for the POSTed request",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RestoreHosts"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/RestoreHosts"
                        }
                    }
                },
                "tags": [
                    "restore"
                ]
            },
            "parameters": []
        },
        "/restore/how_update/{restore_id}/": {
            "get": {
                "operationId": "restore_how_update_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RestoreHow"
                            }
                        }
                    }
                },
                "tags": [
                    "restore"
                ]
            },
            "post": {
                "operationId": "restore_how_update_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RestoreHow"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/RestoreHow"
                        }
                    }
                },
                "tags": [
                    "restore"
                ]
            },
            "parameters": [
                {
                    "name": "restore_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/restore/media/{backupset_id}/{date_time}/{data_needed}/": {
            "get": {
                "operationId": "restore_media_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BackupRunReport"
                            }
                        }
                    }
                },
                "tags": [
                    "restore"
                ]
            },
            "parameters": [
                {
                    "name": "backupset_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "data_needed",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "date_time",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/restore/now_update/{restore_id}/": {
            "get": {
                "operationId": "restore_now_update_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RestoreNow"
                            }
                        }
                    }
                },
                "tags": [
                    "restore"
                ]
            },
            "post": {
                "operationId": "restore_now_update_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RestoreNow"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/RestoreNow"
                        }
                    }
                },
                "tags": [
                    "restore"
                ]
            },
            "parameters": [
                {
                    "name": "restore_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/restore/reset/": {
            "post": {
                "operationId": "restore_reset_create",
                "description": "This method defines the HTTP POST mechanism to fetch backup hosts details asscociated with backupset.\n:param request: request payload\n:param args: positional arguments\n:return: HTTP response containing newly created filesystem source JSON\nand HTTP status for the POSTed request",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RestoreReset"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/RestoreReset"
                        }
                    }
                },
                "tags": [
                    "restore"
                ]
            },
            "parameters": []
        },
        "/restore/restore_abort/": {
            "post": {
                "operationId": "restore_restore_abort_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RestoreAbort"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/RestoreAbort"
                        }
                    }
                },
                "tags": [
                    "restore"
                ]
            },
            "parameters": []
        },
        "/restore/restore_detail/{backupset_id}/": {
            "get": {
                "operationId": "restore_restore_detail_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Restore"
                        }
                    }
                },
                "tags": [
                    "restore"
                ]
            },
            "put": {
                "operationId": "restore_restore_detail_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Restore"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Restore"
                        }
                    }
                },
                "tags": [
                    "restore"
                ]
            },
            "patch": {
                "operationId": "restore_restore_detail_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Restore"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Restore"
                        }
                    }
                },
                "tags": [
                    "restore"
                ]
            },
            "delete": {
                "operationId": "restore_restore_detail_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "restore"
                ]
            },
            "parameters": [
                {
                    "name": "backupset_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/restore/restore_report/{restore_report_id}/": {
            "get": {
                "operationId": "restore_restore_report_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "restore"
                ]
            },
            "parameters": [
                {
                    "name": "restore_report_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/restore/restore_run/": {
            "post": {
                "operationId": "restore_restore_run_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RestoreRun"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/RestoreRun"
                        }
                    }
                },
                "tags": [
                    "restore"
                ]
            },
            "parameters": []
        },
        "/restore/restore_run_details/{backupset_id}/": {
            "get": {
                "operationId": "restore_restore_run_details_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "restore"
                ]
            },
            "parameters": [
                {
                    "name": "backupset_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/restore/store_restore_report/": {
            "post": {
                "operationId": "restore_store_restore_report_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "restore"
                ]
            },
            "parameters": []
        },
        "/restore/task/{task_id}/": {
            "get": {
                "operationId": "restore_task_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "restore"
                ]
            },
            "parameters": [
                {
                    "name": "task_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/restore/what_update/{restore_id}/": {
            "get": {
                "operationId": "restore_what_update_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RestoreWhat"
                            }
                        }
                    }
                },
                "tags": [
                    "restore"
                ]
            },
            "post": {
                "operationId": "restore_what_update_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RestoreWhat"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/RestoreWhat"
                        }
                    }
                },
                "tags": [
                    "restore"
                ]
            },
            "parameters": [
                {
                    "name": "restore_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/restore/where_update/{restore_id}/": {
            "get": {
                "operationId": "restore_where_update_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RestoreWhere"
                            }
                        }
                    }
                },
                "tags": [
                    "restore"
                ]
            },
            "post": {
                "operationId": "restore_where_update_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RestoreWhere"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/RestoreWhere"
                        }
                    }
                },
                "tags": [
                    "restore"
                ]
            },
            "parameters": [
                {
                    "name": "restore_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/schedules/": {
            "get": {
                "operationId": "schedules_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Schedule"
                            }
                        }
                    }
                },
                "tags": [
                    "schedules"
                ]
            },
            "post": {
                "operationId": "schedules_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Schedule"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Schedule"
                        }
                    }
                },
                "tags": [
                    "schedules"
                ]
            },
            "parameters": []
        },
        "/schedules/taskStatus/{task_id}": {
            "get": {
                "operationId": "schedules_taskStatus_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "schedules"
                ]
            },
            "parameters": [
                {
                    "name": "task_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/schedules/{schedule_id}": {
            "get": {
                "operationId": "schedules_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Schedule"
                        }
                    }
                },
                "tags": [
                    "schedules"
                ]
            },
            "put": {
                "operationId": "schedules_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Schedule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Schedule"
                        }
                    }
                },
                "tags": [
                    "schedules"
                ]
            },
            "patch": {
                "operationId": "schedules_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Schedule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Schedule"
                        }
                    }
                },
                "tags": [
                    "schedules"
                ]
            },
            "delete": {
                "operationId": "schedules_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "schedules"
                ]
            },
            "parameters": [
                {
                    "name": "schedule_id",
                    "in": "path",
                    "description": "A unique integer value identifying this schedule.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/servers/": {
            "get": {
                "operationId": "servers_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AEBackupServer"
                            }
                        }
                    }
                },
                "tags": [
                    "servers"
                ]
            },
            "post": {
                "operationId": "servers_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AEBackupServer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AEBackupServer"
                        }
                    }
                },
                "tags": [
                    "servers"
                ]
            },
            "parameters": []
        },
        "/servers/healthcheck/{server_id}/": {
            "get": {
                "operationId": "servers_healthcheck_read",
                "description": "AEBackupServerHealthCheckView provides a view for health checks of AE Backup Server",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AEBackupServer"
                        }
                    }
                },
                "tags": [
                    "servers"
                ]
            },
            "parameters": [
                {
                    "name": "server_id",
                    "in": "path",
                    "description": "A unique integer value identifying this ae backup server.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/servers/healthcheck_status/server/": {
            "post": {
                "operationId": "servers_healthcheck_status_server_create",
                "description": "This method defines the HTTP POST mechanism to fetch server health status.\n:param request: request payload\n:param args: positional arguments\n:return: HTTP response containing newly created filesystem source JSON\nand HTTP status for the POSTed request",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AEBackupServerInstallHealth"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AEBackupServerInstallHealth"
                        }
                    }
                },
                "tags": [
                    "servers"
                ]
            },
            "parameters": []
        },
        "/servers/installcheck/{server_id}/": {
            "get": {
                "operationId": "servers_installcheck_read",
                "description": "AEBackupServerInstallCheckView provides a view for installation checks of AE Backup Server",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AEBackupServer"
                        }
                    }
                },
                "tags": [
                    "servers"
                ]
            },
            "parameters": [
                {
                    "name": "server_id",
                    "in": "path",
                    "description": "A unique integer value identifying this ae backup server.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/servers/server_auth/": {
            "post": {
                "operationId": "servers_server_auth_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AEBackupServer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AEBackupServer"
                        }
                    }
                },
                "tags": [
                    "servers"
                ]
            },
            "parameters": []
        },
        "/servers/task/{task_id}/": {
            "get": {
                "operationId": "servers_task_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "servers"
                ]
            },
            "parameters": [
                {
                    "name": "task_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/servers/versioncheck/{server_id}/": {
            "get": {
                "operationId": "servers_versioncheck_read",
                "description": "AEBackupServerVersionCheckView provides a view for version info of AE Backup Server",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AEBackupServer"
                        }
                    }
                },
                "tags": [
                    "servers"
                ]
            },
            "parameters": [
                {
                    "name": "server_id",
                    "in": "path",
                    "description": "A unique integer value identifying this ae backup server.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/servers/{server_id}/": {
            "get": {
                "operationId": "servers_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AEBackupServer"
                        }
                    }
                },
                "tags": [
                    "servers"
                ]
            },
            "put": {
                "operationId": "servers_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AEBackupServer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AEBackupServer"
                        }
                    }
                },
                "tags": [
                    "servers"
                ]
            },
            "patch": {
                "operationId": "servers_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AEBackupServer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AEBackupServer"
                        }
                    }
                },
                "tags": [
                    "servers"
                ]
            },
            "delete": {
                "operationId": "servers_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "servers"
                ]
            },
            "parameters": [
                {
                    "name": "server_id",
                    "in": "path",
                    "description": "A unique integer value identifying this ae backup server.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/sources/": {
            "get": {
                "operationId": "sources_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DiskListEntry"
                            }
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": []
        },
        "/sources/application/msexchange/": {
            "get": {
                "operationId": "sources_application_msexchange_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MSExchange"
                            }
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "post": {
                "operationId": "sources_application_msexchange_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MSExchange"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MSExchange"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": []
        },
        "/sources/application/msexchange/{source_uid}/": {
            "get": {
                "operationId": "sources_application_msexchange_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MSExchange"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "put": {
                "operationId": "sources_application_msexchange_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MSExchange"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MSExchange"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "patch": {
                "operationId": "sources_application_msexchange_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MSExchange"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MSExchange"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "delete": {
                "operationId": "sources_application_msexchange_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": [
                {
                    "name": "source_uid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/sources/application/mssharepoint/": {
            "get": {
                "operationId": "sources_application_mssharepoint_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MSSharepoint"
                            }
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "post": {
                "operationId": "sources_application_mssharepoint_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MSSharepoint"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MSSharepoint"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": []
        },
        "/sources/application/mssharepoint/{source_uid}/": {
            "get": {
                "operationId": "sources_application_mssharepoint_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MSSharepoint"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "put": {
                "operationId": "sources_application_mssharepoint_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MSSharepoint"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MSSharepoint"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "patch": {
                "operationId": "sources_application_mssharepoint_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MSSharepoint"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MSSharepoint"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "delete": {
                "operationId": "sources_application_mssharepoint_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": [
                {
                    "name": "source_uid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/sources/checkhost/{source_uid}/": {
            "post": {
                "operationId": "sources_checkhost_create",
                "description": "This method defines the HTTP POST mechanism to check the DLE status.\n:param request: request payload\n:param args: positional arguments\n:param kwargs: source_uid field\n:return: HTTP response containing the DLE status\nand HTTP status for the POSTed request",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": [
                {
                    "name": "source_uid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/sources/checkhoststatus/": {
            "get": {
                "operationId": "sources_checkhoststatus_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AEClientCheckHost"
                            }
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": []
        },
        "/sources/checkhoststatus/{source_uid}/": {
            "get": {
                "operationId": "sources_checkhoststatus_read",
                "description": "This method defines the HTTP GET mechanism to fetch an existing source checkhost status.\n:param request: request payload\n:param args: positional arguments\n:param kwargs: source_uid field\n:return: HTTP response containing queried filesystem source JSON\nand HTTP status for the GET request",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AEClientCheckHost"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": [
                {
                    "name": "source_uid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/sources/database/mssql/": {
            "get": {
                "operationId": "sources_database_mssql_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Mssql"
                            }
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "post": {
                "operationId": "sources_database_mssql_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Mssql"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Mssql"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": []
        },
        "/sources/database/mssql/{source_uid}/": {
            "get": {
                "operationId": "sources_database_mssql_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Mssql"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "put": {
                "operationId": "sources_database_mssql_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Mssql"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Mssql"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "patch": {
                "operationId": "sources_database_mssql_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Mssql"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Mssql"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "delete": {
                "operationId": "sources_database_mssql_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": [
                {
                    "name": "source_uid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/sources/database/oraclelinux/": {
            "get": {
                "operationId": "sources_database_oraclelinux_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OracleLinux"
                            }
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "post": {
                "operationId": "sources_database_oraclelinux_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OracleLinux"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OracleLinux"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": []
        },
        "/sources/database/oraclelinux/{source_uid}/": {
            "get": {
                "operationId": "sources_database_oraclelinux_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OracleLinux"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "put": {
                "operationId": "sources_database_oraclelinux_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OracleLinux"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OracleLinux"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "patch": {
                "operationId": "sources_database_oraclelinux_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OracleLinux"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OracleLinux"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "delete": {
                "operationId": "sources_database_oraclelinux_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": [
                {
                    "name": "source_uid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/sources/database/oraclewin/": {
            "get": {
                "operationId": "sources_database_oraclewin_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OracleWindows"
                            }
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "post": {
                "operationId": "sources_database_oraclewin_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OracleWindows"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OracleWindows"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": []
        },
        "/sources/database/oraclewin/{source_uid}/": {
            "get": {
                "operationId": "sources_database_oraclewin_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OracleWindows"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "put": {
                "operationId": "sources_database_oraclewin_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OracleWindows"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OracleWindows"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "patch": {
                "operationId": "sources_database_oraclewin_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OracleWindows"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OracleWindows"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "delete": {
                "operationId": "sources_database_oraclewin_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": [
                {
                    "name": "source_uid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/sources/database/postgresql/": {
            "get": {
                "operationId": "sources_database_postgresql_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PostgreSQL"
                            }
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "post": {
                "operationId": "sources_database_postgresql_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PostgreSQL"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PostgreSQL"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": []
        },
        "/sources/database/postgresql/{source_uid}/": {
            "get": {
                "operationId": "sources_database_postgresql_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PostgreSQL"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "put": {
                "operationId": "sources_database_postgresql_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PostgreSQL"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PostgreSQL"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "patch": {
                "operationId": "sources_database_postgresql_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PostgreSQL"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PostgreSQL"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "delete": {
                "operationId": "sources_database_postgresql_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": [
                {
                    "name": "source_uid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/sources/discover/": {
            "post": {
                "operationId": "sources_discover_create",
                "description": "This method defines the HTTP POST mechanism to discover Exchange, HyperV, MySQL and VMWare servers.\n:param request: request payload\n:return: HTTP response containing newly created filesystem source JSON\nand HTTP status for the POSTed request",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": []
        },
        "/sources/filesystem/linux/": {
            "get": {
                "operationId": "sources_filesystem_linux_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Linux"
                            }
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "post": {
                "operationId": "sources_filesystem_linux_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Linux"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Linux"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": []
        },
        "/sources/filesystem/linux/{source_uid}/": {
            "get": {
                "operationId": "sources_filesystem_linux_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Linux"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "put": {
                "operationId": "sources_filesystem_linux_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Linux"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Linux"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "patch": {
                "operationId": "sources_filesystem_linux_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Linux"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Linux"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "delete": {
                "operationId": "sources_filesystem_linux_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": [
                {
                    "name": "source_uid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/sources/filesystem/mac/": {
            "get": {
                "operationId": "sources_filesystem_mac_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Mac"
                            }
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "post": {
                "operationId": "sources_filesystem_mac_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Mac"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Mac"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": []
        },
        "/sources/filesystem/mac/{source_uid}/": {
            "get": {
                "operationId": "sources_filesystem_mac_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Mac"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "put": {
                "operationId": "sources_filesystem_mac_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Mac"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Mac"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "patch": {
                "operationId": "sources_filesystem_mac_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Mac"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Mac"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "delete": {
                "operationId": "sources_filesystem_mac_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": [
                {
                    "name": "source_uid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/sources/filesystem/ndmp/": {
            "get": {
                "operationId": "sources_filesystem_ndmp_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NDMP"
                            }
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "post": {
                "operationId": "sources_filesystem_ndmp_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NDMP"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NDMP"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": []
        },
        "/sources/filesystem/ndmp/{source_uid}/": {
            "get": {
                "operationId": "sources_filesystem_ndmp_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NDMP"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "put": {
                "operationId": "sources_filesystem_ndmp_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NDMP"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NDMP"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "patch": {
                "operationId": "sources_filesystem_ndmp_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NDMP"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NDMP"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "delete": {
                "operationId": "sources_filesystem_ndmp_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": [
                {
                    "name": "source_uid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/sources/filesystem/network/": {
            "get": {
                "operationId": "sources_filesystem_network_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Network"
                            }
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "post": {
                "operationId": "sources_filesystem_network_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Network"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Network"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": []
        },
        "/sources/filesystem/network/{source_uid}/": {
            "get": {
                "operationId": "sources_filesystem_network_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Network"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "put": {
                "operationId": "sources_filesystem_network_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Network"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Network"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "patch": {
                "operationId": "sources_filesystem_network_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Network"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Network"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "delete": {
                "operationId": "sources_filesystem_network_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": [
                {
                    "name": "source_uid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/sources/filesystem/nfs/": {
            "get": {
                "operationId": "sources_filesystem_nfs_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NFS"
                            }
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "post": {
                "operationId": "sources_filesystem_nfs_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NFS"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NFS"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": []
        },
        "/sources/filesystem/nfs/{source_uid}/": {
            "get": {
                "operationId": "sources_filesystem_nfs_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NFS"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "put": {
                "operationId": "sources_filesystem_nfs_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NFS"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NFS"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "patch": {
                "operationId": "sources_filesystem_nfs_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NFS"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NFS"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "delete": {
                "operationId": "sources_filesystem_nfs_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": [
                {
                    "name": "source_uid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/sources/filesystem/solaris/": {
            "get": {
                "operationId": "sources_filesystem_solaris_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Solaris"
                            }
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "post": {
                "operationId": "sources_filesystem_solaris_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Solaris"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Solaris"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": []
        },
        "/sources/filesystem/solaris/{source_uid}/": {
            "get": {
                "operationId": "sources_filesystem_solaris_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Solaris"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "put": {
                "operationId": "sources_filesystem_solaris_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Solaris"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Solaris"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "patch": {
                "operationId": "sources_filesystem_solaris_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Solaris"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Solaris"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "delete": {
                "operationId": "sources_filesystem_solaris_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": [
                {
                    "name": "source_uid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/sources/filesystem/winntfs/": {
            "get": {
                "operationId": "sources_filesystem_winntfs_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WindowsNTFS"
                            }
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "post": {
                "operationId": "sources_filesystem_winntfs_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WindowsNTFS"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WindowsNTFS"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": []
        },
        "/sources/filesystem/winntfs/{source_uid}/": {
            "get": {
                "operationId": "sources_filesystem_winntfs_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WindowsNTFS"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "put": {
                "operationId": "sources_filesystem_winntfs_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WindowsNTFS"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WindowsNTFS"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "patch": {
                "operationId": "sources_filesystem_winntfs_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WindowsNTFS"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WindowsNTFS"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "delete": {
                "operationId": "sources_filesystem_winntfs_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": [
                {
                    "name": "source_uid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/sources/filesystem/winsystem/": {
            "get": {
                "operationId": "sources_filesystem_winsystem_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WindowsSystem"
                            }
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "post": {
                "operationId": "sources_filesystem_winsystem_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WindowsSystem"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WindowsSystem"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": []
        },
        "/sources/filesystem/winsystem/{source_uid}/": {
            "get": {
                "operationId": "sources_filesystem_winsystem_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WindowsSystem"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "put": {
                "operationId": "sources_filesystem_winsystem_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WindowsSystem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WindowsSystem"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "patch": {
                "operationId": "sources_filesystem_winsystem_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WindowsSystem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WindowsSystem"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "delete": {
                "operationId": "sources_filesystem_winsystem_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": [
                {
                    "name": "source_uid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/sources/filesystem/wintemplate/": {
            "get": {
                "operationId": "sources_filesystem_wintemplate_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WindowsTemplate"
                            }
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "post": {
                "operationId": "sources_filesystem_wintemplate_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WindowsTemplate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WindowsTemplate"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": []
        },
        "/sources/filesystem/wintemplate/{source_uid}/": {
            "get": {
                "operationId": "sources_filesystem_wintemplate_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WindowsTemplate"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "put": {
                "operationId": "sources_filesystem_wintemplate_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WindowsTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WindowsTemplate"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "patch": {
                "operationId": "sources_filesystem_wintemplate_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WindowsTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WindowsTemplate"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "delete": {
                "operationId": "sources_filesystem_wintemplate_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": [
                {
                    "name": "source_uid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/sources/hypervisor/mshyperv/": {
            "get": {
                "operationId": "sources_hypervisor_mshyperv_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MSHyperV"
                            }
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "post": {
                "operationId": "sources_hypervisor_mshyperv_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MSHyperV"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MSHyperV"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": []
        },
        "/sources/hypervisor/mshyperv/{source_uid}/": {
            "get": {
                "operationId": "sources_hypervisor_mshyperv_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MSHyperV"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "put": {
                "operationId": "sources_hypervisor_mshyperv_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MSHyperV"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MSHyperV"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "patch": {
                "operationId": "sources_hypervisor_mshyperv_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MSHyperV"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MSHyperV"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "delete": {
                "operationId": "sources_hypervisor_mshyperv_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": [
                {
                    "name": "source_uid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/sources/hypervisor/vmware/": {
            "get": {
                "operationId": "sources_hypervisor_vmware_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/VMWare"
                            }
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "post": {
                "operationId": "sources_hypervisor_vmware_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VMWare"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/VMWare"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": []
        },
        "/sources/hypervisor/vmware/{source_uid}/": {
            "get": {
                "operationId": "sources_hypervisor_vmware_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/VMWare"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "put": {
                "operationId": "sources_hypervisor_vmware_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VMWare"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/VMWare"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "patch": {
                "operationId": "sources_hypervisor_vmware_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VMWare"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/VMWare"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "delete": {
                "operationId": "sources_hypervisor_vmware_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": [
                {
                    "name": "source_uid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/sources/source/{source_uid}/{status}/": {
            "get": {
                "operationId": "sources_source_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DiskListEntry"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "put": {
                "operationId": "sources_source_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DiskListEntry"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DiskListEntry"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "patch": {
                "operationId": "sources_source_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DiskListEntry"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DiskListEntry"
                        }
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "delete": {
                "operationId": "sources_source_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": [
                {
                    "name": "source_uid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "status",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/sources/task/{task_id}/": {
            "get": {
                "operationId": "sources_task_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "sources"
                ]
            },
            "parameters": [
                {
                    "name": "task_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/storages/": {
            "get": {
                "operationId": "storages_read",
                "description": "BaseChangerDetailView provides a view to get an Base storage device object.\nEach Base storage object is uniquely identified by \"storage_uid\" field that needs to be passed\nto perform any operation from this class.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BaseStorage"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "parameters": []
        },
        "/storages/base_storage/{storage_uid}": {
            "get": {
                "operationId": "storages_base_storage_read",
                "description": "BaseChangerDetailView provides a view to get an Base storage device object.\nEach Base storage object is uniquely identified by \"storage_uid\" field that needs to be passed\nto perform any operation from this class.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BaseStorage"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "parameters": [
                {
                    "name": "storage_uid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/storages/cloud_storage/aws_s3/": {
            "get": {
                "operationId": "storages_cloud_storage_aws_s3_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AwsS3Storage"
                            }
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "post": {
                "operationId": "storages_cloud_storage_aws_s3_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AwsS3Storage"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AwsS3Storage"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "parameters": []
        },
        "/storages/cloud_storage/aws_s3/{storage_device_id}": {
            "get": {
                "operationId": "storages_cloud_storage_aws_s3_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AwsS3Storage"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "put": {
                "operationId": "storages_cloud_storage_aws_s3_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AwsS3Storage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AwsS3Storage"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "patch": {
                "operationId": "storages_cloud_storage_aws_s3_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AwsS3Storage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AwsS3Storage"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "delete": {
                "operationId": "storages_cloud_storage_aws_s3_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "parameters": [
                {
                    "name": "storage_device_id",
                    "in": "path",
                    "description": "A unique integer value identifying this cloud storage device.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/storages/cloud_storage/azure/": {
            "get": {
                "operationId": "storages_cloud_storage_azure_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AzureCloudStorage"
                            }
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "post": {
                "operationId": "storages_cloud_storage_azure_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AzureCloudStorage"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AzureCloudStorage"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "parameters": []
        },
        "/storages/cloud_storage/azure/{storage_device_id}": {
            "get": {
                "operationId": "storages_cloud_storage_azure_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AzureCloudStorage"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "put": {
                "operationId": "storages_cloud_storage_azure_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AzureCloudStorage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AzureCloudStorage"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "patch": {
                "operationId": "storages_cloud_storage_azure_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AzureCloudStorage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AzureCloudStorage"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "delete": {
                "operationId": "storages_cloud_storage_azure_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "parameters": [
                {
                    "name": "storage_device_id",
                    "in": "path",
                    "description": "A unique integer value identifying this cloud storage device.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/storages/cloud_storage/google/": {
            "get": {
                "operationId": "storages_cloud_storage_google_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GoogleStorage"
                            }
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "post": {
                "operationId": "storages_cloud_storage_google_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GoogleStorage"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GoogleStorage"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "parameters": []
        },
        "/storages/cloud_storage/google/{storage_device_id}": {
            "get": {
                "operationId": "storages_cloud_storage_google_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GoogleStorage"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "put": {
                "operationId": "storages_cloud_storage_google_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GoogleStorage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GoogleStorage"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "patch": {
                "operationId": "storages_cloud_storage_google_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GoogleStorage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GoogleStorage"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "delete": {
                "operationId": "storages_cloud_storage_google_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "parameters": [
                {
                    "name": "storage_device_id",
                    "in": "path",
                    "description": "A unique integer value identifying this cloud storage device.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/storages/cloud_storage/open_stack/": {
            "get": {
                "operationId": "storages_cloud_storage_open_stack_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OpenStackStorage"
                            }
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "post": {
                "operationId": "storages_cloud_storage_open_stack_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OpenStackStorage"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OpenStackStorage"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "parameters": []
        },
        "/storages/cloud_storage/open_stack/{storage_device_id}": {
            "get": {
                "operationId": "storages_cloud_storage_open_stack_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OpenStackStorage"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "put": {
                "operationId": "storages_cloud_storage_open_stack_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OpenStackStorage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OpenStackStorage"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "patch": {
                "operationId": "storages_cloud_storage_open_stack_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OpenStackStorage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OpenStackStorage"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "delete": {
                "operationId": "storages_cloud_storage_open_stack_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "parameters": [
                {
                    "name": "storage_device_id",
                    "in": "path",
                    "description": "A unique integer value identifying this cloud storage device.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/storages/cloud_storage/s3_compatible/": {
            "get": {
                "operationId": "storages_cloud_storage_s3_compatible_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/S3CompatibleStorage"
                            }
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "post": {
                "operationId": "storages_cloud_storage_s3_compatible_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/S3CompatibleStorage"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/S3CompatibleStorage"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "parameters": []
        },
        "/storages/cloud_storage/s3_compatible/{storage_device_id}": {
            "get": {
                "operationId": "storages_cloud_storage_s3_compatible_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/S3CompatibleStorage"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "put": {
                "operationId": "storages_cloud_storage_s3_compatible_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/S3CompatibleStorage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/S3CompatibleStorage"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "patch": {
                "operationId": "storages_cloud_storage_s3_compatible_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/S3CompatibleStorage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/S3CompatibleStorage"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "delete": {
                "operationId": "storages_cloud_storage_s3_compatible_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "parameters": [
                {
                    "name": "storage_device_id",
                    "in": "path",
                    "description": "A unique integer value identifying this cloud storage device.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/storages/cloud_storage/wasabi/": {
            "get": {
                "operationId": "storages_cloud_storage_wasabi_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WasabiCloudStorage"
                            }
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "post": {
                "operationId": "storages_cloud_storage_wasabi_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WasabiCloudStorage"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WasabiCloudStorage"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "parameters": []
        },
        "/storages/cloud_storage/wasabi/{storage_device_id}": {
            "get": {
                "operationId": "storages_cloud_storage_wasabi_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WasabiCloudStorage"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "put": {
                "operationId": "storages_cloud_storage_wasabi_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WasabiCloudStorage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WasabiCloudStorage"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "patch": {
                "operationId": "storages_cloud_storage_wasabi_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WasabiCloudStorage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WasabiCloudStorage"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "delete": {
                "operationId": "storages_cloud_storage_wasabi_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "parameters": [
                {
                    "name": "storage_device_id",
                    "in": "path",
                    "description": "A unique integer value identifying this cloud storage device.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/storages/get_disk_space_details/": {
            "get": {
                "operationId": "storages_get_disk_space_details_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "parameters": []
        },
        "/storages/legacy/v_tape/": {
            "get": {
                "operationId": "storages_legacy_v_tape_list",
                "description": "VTapeStorageCreateView provides a view to create a storage of V-Tape storage type\nand get the list of all v-tape devices.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/VTapeStorage"
                            }
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "post": {
                "operationId": "storages_legacy_v_tape_create",
                "description": "VTapeStorageCreateView provides a view to create a storage of V-Tape storage type\nand get the list of all v-tape devices.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VTapeStorage"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/VTapeStorage"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "parameters": []
        },
        "/storages/legacy/v_tape/{storage_device_id}": {
            "get": {
                "operationId": "storages_legacy_v_tape_read",
                "description": "VTapeStorageDetailView provides a view to get, modify or delete an V-Tape storage device object.\nEach V-Tape storage object is uniquely identified by \"storage_device_id\" field that needs to be passed\nto perform any operation from this class.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/VTapeStorage"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "put": {
                "operationId": "storages_legacy_v_tape_update",
                "description": "VTapeStorageDetailView provides a view to get, modify or delete an V-Tape storage device object.\nEach V-Tape storage object is uniquely identified by \"storage_device_id\" field that needs to be passed\nto perform any operation from this class.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VTapeStorage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/VTapeStorage"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "patch": {
                "operationId": "storages_legacy_v_tape_partial_update",
                "description": "VTapeStorageDetailView provides a view to get, modify or delete an V-Tape storage device object.\nEach V-Tape storage object is uniquely identified by \"storage_device_id\" field that needs to be passed\nto perform any operation from this class.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VTapeStorage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/VTapeStorage"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "delete": {
                "operationId": "storages_legacy_v_tape_delete",
                "description": "VTapeStorageDetailView provides a view to get, modify or delete an V-Tape storage device object.\nEach V-Tape storage object is uniquely identified by \"storage_device_id\" field that needs to be passed\nto perform any operation from this class.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "parameters": [
                {
                    "name": "storage_device_id",
                    "in": "path",
                    "description": "A unique integer value identifying this v tape storage device.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/storages/lsscsi_output/{ae_server_id}": {
            "get": {
                "operationId": "storages_lsscsi_output_read",
                "description": "FetchLSSCSIOutput provides a method to fetch the LSSCSI output from the backup server.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "parameters": [
                {
                    "name": "ae_server_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/storages/mtx_output/{ae_server_id}": {
            "get": {
                "operationId": "storages_mtx_output_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "parameters": [
                {
                    "name": "ae_server_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/storages/simplified_disk/disk/": {
            "get": {
                "operationId": "storages_simplified_disk_disk_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Disk"
                            }
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "post": {
                "operationId": "storages_simplified_disk_disk_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Disk"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Disk"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "parameters": []
        },
        "/storages/simplified_disk/disk/{storage_device_id}": {
            "get": {
                "operationId": "storages_simplified_disk_disk_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Disk"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "put": {
                "operationId": "storages_simplified_disk_disk_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Disk"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Disk"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "patch": {
                "operationId": "storages_simplified_disk_disk_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Disk"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Disk"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "delete": {
                "operationId": "storages_simplified_disk_disk_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "parameters": [
                {
                    "name": "storage_device_id",
                    "in": "path",
                    "description": "A unique integer value identifying this disk storage device.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/storages/tape_storage/ndmp_changer/": {
            "get": {
                "operationId": "storages_tape_storage_ndmp_changer_list",
                "description": "NDMPChangerView provides a view to create a storage of NDMP Changer storage type\nand get the list of all NDMP changer devices.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NDMPChanger"
                            }
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "post": {
                "operationId": "storages_tape_storage_ndmp_changer_create",
                "description": "This method defines the HTTP POST mechanism to create new NDMP Changer Storage device object.\n    Parameters:\n        self: NDMPChangerView instance\n        request: request payload\n        args: positional arguments\n        kwargs: dict of keyword arguments\n    Returns:\n        HTTP response containing newly created NDMP Changer storage device object JSON\n        and HTTP status for the POSTed request",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NDMPChanger"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NDMPChanger"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "parameters": []
        },
        "/storages/tape_storage/ndmp_changer/{storage_device_id}": {
            "get": {
                "operationId": "storages_tape_storage_ndmp_changer_read",
                "description": "Mechanism to fetch the details for an existing NDMP Changer device object. Pass Storage ID in URL params",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NDMPChanger"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "put": {
                "operationId": "storages_tape_storage_ndmp_changer_update",
                "description": "Mechanism to modify an existing NDMP Changer device object. Pass storage ID in URL params",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NDMPChanger"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NDMPChanger"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "patch": {
                "operationId": "storages_tape_storage_ndmp_changer_partial_update",
                "description": "NDMPChangerDetailView provides a view to get, modify or delete an NDMP Changer storage device object.\nEach NDMP Changer storage object is uniquely identified by \"storage_device_id\" field that needs to be passed\nto perform any operation from this class.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NDMPChanger"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NDMPChanger"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "delete": {
                "operationId": "storages_tape_storage_ndmp_changer_delete",
                "description": "Mechanism to remove an existing NDMP Changer device object.Pass storage ID in URL params",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "parameters": [
                {
                    "name": "storage_device_id",
                    "in": "path",
                    "description": "A unique integer value identifying this tape storage device.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/storages/tape_storage/tape_changer/": {
            "get": {
                "operationId": "storages_tape_storage_tape_changer_list",
                "description": "TapeChangerView provides a view to create a storage of Tape Changer storage type\nand get the list of all tape changer devices.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TapeChanger"
                            }
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "post": {
                "operationId": "storages_tape_storage_tape_changer_create",
                "description": "TapeChangerView provides a view to create a storage of Tape Changer storage type\nand get the list of all tape changer devices.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TapeChanger"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TapeChanger"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "parameters": []
        },
        "/storages/tape_storage/tape_changer/get_tape_changer_list/{ae_server_id}": {
            "get": {
                "operationId": "storages_tape_storage_tape_changer_get_tape_changer_list_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "parameters": [
                {
                    "name": "ae_server_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/storages/tape_storage/tape_changer/{storage_device_id}": {
            "get": {
                "operationId": "storages_tape_storage_tape_changer_read",
                "description": "TapeChangerDetailView provides a view to get, modify or delete an Tape Changer storage device object.\nEach Tape Changer storage object is uniquely identified by \"storage_device_id\" field that needs to be passed\nto perform any operation from this class.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TapeChanger"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "put": {
                "operationId": "storages_tape_storage_tape_changer_update",
                "description": "TapeChangerDetailView provides a view to get, modify or delete an Tape Changer storage device object.\nEach Tape Changer storage object is uniquely identified by \"storage_device_id\" field that needs to be passed\nto perform any operation from this class.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TapeChanger"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TapeChanger"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "patch": {
                "operationId": "storages_tape_storage_tape_changer_partial_update",
                "description": "TapeChangerDetailView provides a view to get, modify or delete an Tape Changer storage device object.\nEach Tape Changer storage object is uniquely identified by \"storage_device_id\" field that needs to be passed\nto perform any operation from this class.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TapeChanger"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TapeChanger"
                        }
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "delete": {
                "operationId": "storages_tape_storage_tape_changer_delete",
                "description": "TapeChangerDetailView provides a view to get, modify or delete an Tape Changer storage device object.\nEach Tape Changer storage object is uniquely identified by \"storage_device_id\" field that needs to be passed\nto perform any operation from this class.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "parameters": [
                {
                    "name": "storage_device_id",
                    "in": "path",
                    "description": "A unique integer value identifying this tape storage device.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/storages/task_status/{task_id}": {
            "get": {
                "operationId": "storages_task_status_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "storages"
                ]
            },
            "parameters": [
                {
                    "name": "task_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/users/": {
            "get": {
                "operationId": "users_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CurrentUser"
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "post": {
                "operationId": "users_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CurrentUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CurrentUser"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "parameters": []
        },
        "/users/acl/policies/": {
            "get": {
                "operationId": "users_acl_policies_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Policy"
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "post": {
                "operationId": "users_acl_policies_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Policy"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Policy"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "parameters": []
        },
        "/users/acl/policies/{id}/": {
            "get": {
                "operationId": "users_acl_policies_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Policy"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "put": {
                "operationId": "users_acl_policies_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Policy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Policy"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "patch": {
                "operationId": "users_acl_policies_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Policy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Policy"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "delete": {
                "operationId": "users_acl_policies_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this policy.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/users/acl/roles/": {
            "get": {
                "operationId": "users_acl_roles_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Role"
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "post": {
                "operationId": "users_acl_roles_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "parameters": []
        },
        "/users/acl/roles/{id}/": {
            "get": {
                "operationId": "users_acl_roles_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "put": {
                "operationId": "users_acl_roles_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "patch": {
                "operationId": "users_acl_roles_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "delete": {
                "operationId": "users_acl_roles_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this role.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/users/acl/statements/": {
            "get": {
                "operationId": "users_acl_statements_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Statement"
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "post": {
                "operationId": "users_acl_statements_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Statement"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Statement"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "parameters": []
        },
        "/users/changetype/{id}/": {
            "put": {
                "operationId": "users_changetype_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangeUserType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ChangeUserType"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "patch": {
                "operationId": "users_changetype_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangeUserType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ChangeUserType"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this user.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/users/ldap/add-bulk-users/": {
            "post": {
                "operationId": "users_ldap_add-bulk-users_create",
                "description": "Endpoint to add bulk users.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MultipleUsersAdd"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MultipleUsersAdd"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "parameters": []
        },
        "/users/ldap/domainattrs/{id}/": {
            "get": {
                "operationId": "users_ldap_domainattrs_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/users/ldap/domains/": {
            "get": {
                "operationId": "users_ldap_domains_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LDAPDomain"
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "post": {
                "operationId": "users_ldap_domains_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LDAPDomain"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LDAPDomain"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "parameters": []
        },
        "/users/ldap/domains/{id}/": {
            "get": {
                "operationId": "users_ldap_domains_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LDAPDomain"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "put": {
                "operationId": "users_ldap_domains_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LDAPDomain"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LDAPDomain"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "patch": {
                "operationId": "users_ldap_domains_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LDAPDomain"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LDAPDomain"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "delete": {
                "operationId": "users_ldap_domains_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this ldap domain.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/users/ldap/search/{id}/": {
            "post": {
                "operationId": "users_ldap_search_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LDAPSearch"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LDAPSearch"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/users/ldap/task/{task_id}/": {
            "get": {
                "operationId": "users_ldap_task_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "parameters": [
                {
                    "name": "task_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/users/resetpassword/{id}/": {
            "put": {
                "operationId": "users_resetpassword_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CurrentUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CurrentUser"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "patch": {
                "operationId": "users_resetpassword_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CurrentUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CurrentUser"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this user.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/users/token/refresh/": {
            "post": {
                "operationId": "users_token_refresh_create",
                "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TokenRefresh"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TokenRefresh"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "parameters": []
        },
        "/users/tour/update/": {
            "get": {
                "operationId": "users_tour_update_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CurrentUser"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "put": {
                "operationId": "users_tour_update_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CurrentUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CurrentUser"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "patch": {
                "operationId": "users_tour_update_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CurrentUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CurrentUser"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "parameters": []
        },
        "/users/updatepassword/{id}/": {
            "put": {
                "operationId": "users_updatepassword_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CurrentUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CurrentUser"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "patch": {
                "operationId": "users_updatepassword_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CurrentUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CurrentUser"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this user.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/users/updaterole/{id}/": {
            "put": {
                "operationId": "users_updaterole_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CurrentUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CurrentUser"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "patch": {
                "operationId": "users_updaterole_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CurrentUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CurrentUser"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this user.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/users/zmc/login/": {
            "post": {
                "operationId": "users_zmc_login_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MyTokenObtainPair"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MyTokenObtainPair"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "parameters": []
        },
        "/users/zmc/logout/": {
            "post": {
                "operationId": "users_zmc_logout_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "parameters": []
        },
        "/users/{id}/": {
            "get": {
                "operationId": "users_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CurrentUser"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "put": {
                "operationId": "users_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CurrentUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CurrentUser"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "patch": {
                "operationId": "users_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CurrentUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CurrentUser"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "delete": {
                "operationId": "users_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this user.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/vault/": {
            "get": {
                "operationId": "vault_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Vault"
                            }
                        }
                    }
                },
                "tags": [
                    "vault"
                ]
            },
            "post": {
                "operationId": "vault_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Vault"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Vault"
                        }
                    }
                },
                "tags": [
                    "vault"
                ]
            },
            "parameters": []
        },
        "/vault/config_synced/{vault_id}": {
            "put": {
                "operationId": "vault_config_synced_update",
                "description": "Decorator to validate vault request data\n:return: view function",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Vault"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Vault"
                        }
                    }
                },
                "tags": [
                    "vault"
                ]
            },
            "patch": {
                "operationId": "vault_config_synced_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Vault"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Vault"
                        }
                    }
                },
                "tags": [
                    "vault"
                ]
            },
            "parameters": [
                {
                    "name": "vault_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/vault/get_tape_device_details/{tape_device_id}": {
            "get": {
                "operationId": "vault_get_tape_device_details_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "vault"
                ]
            },
            "parameters": [
                {
                    "name": "tape_device_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/vault/now/{vault_id}/": {
            "get": {
                "operationId": "vault_now_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Vault"
                            }
                        }
                    }
                },
                "tags": [
                    "vault"
                ]
            },
            "post": {
                "operationId": "vault_now_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Vault"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Vault"
                        }
                    }
                },
                "tags": [
                    "vault"
                ]
            },
            "parameters": [
                {
                    "name": "vault_id",
                    "in": "path",
                    "description": "A unique integer value identifying this vault.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/vault/task/{task_id}/": {
            "get": {
                "operationId": "vault_task_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "vault"
                ]
            },
            "parameters": [
                {
                    "name": "task_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/vault/{vault_id}/": {
            "get": {
                "operationId": "vault_read",
                "description": "This method defines the HTTP GET mechanism to fetch an existing Vault object.\n:param request: request payload\n:param args: positional arguments\n:param kwargs: backupset_id field\n:return: HTTP response containing queried BackupSet object JSON\nand HTTP status for the GET request",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Vault"
                        }
                    }
                },
                "tags": [
                    "vault"
                ]
            },
            "put": {
                "operationId": "vault_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Vault"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Vault"
                        }
                    }
                },
                "tags": [
                    "vault"
                ]
            },
            "patch": {
                "operationId": "vault_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Vault"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Vault"
                        }
                    }
                },
                "tags": [
                    "vault"
                ]
            },
            "delete": {
                "operationId": "vault_delete",
                "description": "This method defines the HTTP DELETE mechanism to remove an existing Vault object.\n:param request: request payload\n:param args: positional arguments\n:param kwargs: vault_id field\n:return: HTTP response for the deleted Vault object\nand HTTP status for the DELETE request",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "vault"
                ]
            },
            "parameters": [
                {
                    "name": "vault_id",
                    "in": "path",
                    "description": "A unique integer value identifying this vault.",
                    "required": true,
                    "type": "integer"
                }
            ]
        }
    },
    "definitions": {
        "StorageCategoryTypeSerializer": {
            "required": [
                "category_name",
                "storage_type"
            ],
            "type": "object",
            "properties": {
                "category_name": {
                    "title": "Category name",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "storage_type": {
                    "title": "Storage type",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                }
            }
        },
        "BaseStorage": {
            "required": [
                "storage_device_name",
                "category_type",
                "comments",
                "storage_device_status",
                "tags",
                "ae_backup_servers"
            ],
            "type": "object",
            "properties": {
                "storage_device_id": {
                    "title": "Storage device id",
                    "type": "integer",
                    "readOnly": true
                },
                "storage_device_name": {
                    "title": "Storage device name",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1
                },
                "category_type": {
                    "title": "Category type",
                    "type": "integer"
                },
                "category_details": {
                    "$ref": "#/definitions/StorageCategoryTypeSerializer"
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 1
                },
                "storage_device_status": {
                    "title": "Storage device status",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "last_modified_date": {
                    "title": "Last modified date",
                    "type": "string",
                    "format": "date-time"
                },
                "last_modified_by": {
                    "title": "Last modified by",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                },
                "ae_backup_servers": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                },
                "storage_guid": {
                    "title": "Storage guid",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "BackupSet": {
            "required": [
                "aebackup_server",
                "backupset_name",
                "backupset_desc",
                "comments",
                "tags"
            ],
            "type": "object",
            "properties": {
                "backupset_id": {
                    "title": "Backupset id",
                    "type": "integer",
                    "readOnly": true
                },
                "aebackup_server": {
                    "title": "Aebackup server",
                    "type": "integer"
                },
                "backupset_name": {
                    "title": "Backupset name",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backupset_desc": {
                    "title": "Backupset desc",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "storage_device": {
                    "title": "Storage device",
                    "type": "integer",
                    "x-nullable": true
                },
                "storage_device_details": {
                    "$ref": "#/definitions/BaseStorage"
                },
                "active": {
                    "title": "Active",
                    "type": "boolean"
                },
                "schedule": {
                    "title": "Schedule",
                    "type": "integer",
                    "x-nullable": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                },
                "config_synced": {
                    "title": "Config synced",
                    "type": "boolean",
                    "x-nullable": true
                }
            }
        },
        "BackupAbort": {
            "required": [
                "backupset_name"
            ],
            "type": "object",
            "properties": {
                "backupset_name": {
                    "title": "Backupset name",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "BackupNow": {
            "required": [
                "backupset",
                "backup_level",
                "dles"
            ],
            "type": "object",
            "properties": {
                "backupset": {
                    "title": "Backupset",
                    "type": "string",
                    "minLength": 1
                },
                "backup_level": {
                    "title": "Backup level",
                    "type": "string",
                    "minLength": 1
                },
                "dles": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "x-nullable": true
                    }
                }
            }
        },
        "BackupMediaOperations": {
            "required": [
                "backupset_id",
                "action",
                "media_labels"
            ],
            "type": "object",
            "properties": {
                "backupset_id": {
                    "title": "Backupset id",
                    "type": "integer"
                },
                "action": {
                    "title": "Action",
                    "type": "string"
                },
                "media_labels": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "x-nullable": true
                    },
                    "x-nullable": true
                }
            }
        },
        "LabelBackupMedia": {
            "required": [
                "backup_media_id",
                "include_barcode",
                "overwrite_media",
                "label_list"
            ],
            "type": "object",
            "properties": {
                "backup_media_id": {
                    "title": "Backup media id",
                    "type": "integer"
                },
                "include_barcode": {
                    "title": "Include barcode",
                    "type": "boolean",
                    "x-nullable": true
                },
                "overwrite_media": {
                    "title": "Overwrite media",
                    "type": "boolean",
                    "x-nullable": true
                },
                "label_list": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "x-nullable": true
                    },
                    "x-nullable": true
                }
            }
        },
        "ScanSlots": {
            "required": [
                "backup_media_id"
            ],
            "type": "object",
            "properties": {
                "backup_media_id": {
                    "title": "Backup media id",
                    "type": "integer"
                }
            }
        },
        "BackupMediaConfigUpdate": {
            "required": [
                "backup_media_id",
                "backup_cycle",
                "retention"
            ],
            "type": "object",
            "properties": {
                "backup_media_id": {
                    "title": "Backup media id",
                    "type": "integer"
                },
                "backup_cycle": {
                    "title": "Backup cycle",
                    "type": "integer",
                    "x-nullable": true
                },
                "retention": {
                    "title": "Retention",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "BackupWhere": {
            "required": [
                "backupset_config_name",
                "device_name",
                "device_type",
                "storage_type",
                "backupset"
            ],
            "type": "object",
            "properties": {
                "backupset_where_id": {
                    "title": "Backupset where id",
                    "type": "integer",
                    "readOnly": true
                },
                "backupset_config_name": {
                    "title": "Backupset config name",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "device_name": {
                    "title": "Device name",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "device_type": {
                    "title": "Device type",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "storage_type": {
                    "title": "Storage type",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backupset_linked": {
                    "title": "Backupset linked",
                    "type": "boolean"
                },
                "read_from_glacier": {
                    "title": "Read from glacier",
                    "type": "boolean"
                },
                "transition_to_glacier": {
                    "title": "Transition to glacier",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "comment": {
                    "title": "Comment",
                    "type": "string",
                    "minLength": 1,
                    "x-nullable": true
                },
                "taperscan_plugin": {
                    "title": "Taperscan plugin",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "media_used": {
                    "title": "Media used",
                    "type": "number",
                    "x-nullable": true
                },
                "slot_range": {
                    "title": "Slot range",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "changer_dev": {
                    "title": "Changer dev",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1,
                    "x-nullable": true
                },
                "tape_drive_device": {
                    "title": "Tape drive device",
                    "type": "string",
                    "minLength": 1,
                    "x-nullable": true
                },
                "ignore_bar_codes": {
                    "title": "Ignore bar codes",
                    "type": "boolean",
                    "x-nullable": true
                },
                "autolabel": {
                    "title": "Autolabel",
                    "type": "boolean",
                    "x-nullable": true
                },
                "autolabel_how": {
                    "title": "Autolabel how",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "S3_BUCKET_NAME": {
                    "title": "S3 BUCKET NAME",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "S3_BUCKET_LOCATION": {
                    "title": "S3 BUCKET LOCATION",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "S3_SSL": {
                    "title": "S3 SSL",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "bandwidth_toggle": {
                    "title": "Bandwidth toggle",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "MAX_SEND_SPEED": {
                    "title": "MAX SEND SPEED",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "MAX_RECV_SPEED": {
                    "title": "MAX RECV SPEED",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "NB_THREADS_BACKUP": {
                    "title": "NB THREADS BACKUP",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "NB_THREADS_RECOVERY": {
                    "title": "NB THREADS RECOVERY",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "backupset": {
                    "title": "Backupset",
                    "type": "integer"
                }
            }
        },
        "BackupSetClone": {
            "required": [
                "existing_backupset_id",
                "new_backupset_name",
                "option",
                "storage_device_name"
            ],
            "type": "object",
            "properties": {
                "existing_backupset_id": {
                    "title": "Existing backupset id",
                    "type": "integer"
                },
                "new_backupset_name": {
                    "title": "New backupset name",
                    "type": "string",
                    "minLength": 1
                },
                "option": {
                    "title": "Option",
                    "type": "integer",
                    "x-nullable": true
                },
                "storage_device_name": {
                    "title": "Storage device name",
                    "type": "string"
                }
            }
        },
        "BackupsetHow": {
            "required": [
                "backupset_name",
                "backupset"
            ],
            "type": "object",
            "properties": {
                "backupset_config_id": {
                    "title": "Backupset config id",
                    "type": "integer",
                    "readOnly": true
                },
                "backupset_name": {
                    "title": "Backupset name",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "taperalgo": {
                    "title": "Taperalgo",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "dumporder": {
                    "title": "Dumporder",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "inparallel": {
                    "title": "Inparallel",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "maxdumps": {
                    "title": "Maxdumps",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "taper_parallel_write": {
                    "title": "Taper parallel write",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "reserved_tcp_port": {
                    "title": "Reserved tcp port",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "record": {
                    "title": "Record",
                    "type": "boolean"
                },
                "send_amreport_on": {
                    "title": "Send amreport on",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "mailto": {
                    "title": "Mailto",
                    "type": "string",
                    "minLength": 1
                },
                "etimeout": {
                    "title": "Etimeout",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "etimeout_display": {
                    "title": "Etimeout display",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "ctimeout": {
                    "title": "Ctimeout",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "ctimeout_display": {
                    "title": "Ctimeout display",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "dtimeout": {
                    "title": "Dtimeout",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "dtimeout_display": {
                    "title": "Dtimeout display",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backupset": {
                    "title": "Backupset",
                    "type": "integer"
                }
            }
        },
        "BackupsetWhen": {
            "required": [
                "backupset"
            ],
            "type": "object",
            "properties": {
                "backupset_config_id": {
                    "title": "Backupset config id",
                    "type": "integer",
                    "readOnly": true
                },
                "dumpcycle": {
                    "title": "Dumpcycle",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "desired_retention_period": {
                    "title": "Desired retention period",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "tapecycle": {
                    "title": "Tapecycle",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "runtapes": {
                    "title": "Runtapes",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "historical_retention_period": {
                    "title": "Historical retention period",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "dle_with_shortest_retention_period": {
                    "title": "Dle with shortest retention period",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "estimated_tapes_per_retention_period": {
                    "title": "Estimated tapes per retention period",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "archived_media": {
                    "title": "Archived media",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "total_tapes_needed": {
                    "title": "Total tapes needed",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "dumpcycle_tapes_used": {
                    "title": "Dumpcycle tapes used",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "total_tapes_seen": {
                    "title": "Total tapes seen",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "tapes_per_dumpcycle": {
                    "title": "Tapes per dumpcycle",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "runs_per_week": {
                    "title": "Runs per week",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "runspercycle": {
                    "title": "Runspercycle",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "backupset": {
                    "title": "Backupset",
                    "type": "integer"
                },
                "schedule_id": {
                    "title": "Schedule id",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "BackupStaging": {
            "required": [
                "backupset_name",
                "device_name",
                "device_type",
                "staging_strategy",
                "directory",
                "backupset"
            ],
            "type": "object",
            "properties": {
                "backupset_staging_id": {
                    "title": "Backupset staging id",
                    "type": "integer",
                    "readOnly": true
                },
                "backupset_name": {
                    "title": "Backupset name",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "device_name": {
                    "title": "Device name",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "device_type": {
                    "title": "Device type",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "autoflush": {
                    "title": "Autoflush",
                    "type": "boolean"
                },
                "staging_strategy": {
                    "title": "Staging strategy",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "use_request": {
                    "title": "Use request",
                    "type": "number"
                },
                "use_request_display": {
                    "title": "Use request display",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "filesystem_reserved_percent": {
                    "title": "Filesystem reserved percent",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "directory": {
                    "title": "Directory",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "reserve": {
                    "title": "Reserve",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "flush_threshold_dumped": {
                    "title": "Flush threshold dumped",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "flush_threshold_scheduled": {
                    "title": "Flush threshold scheduled",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "taperflush": {
                    "title": "Taperflush",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "holding_list": {
                    "title": "Holding list",
                    "type": "string",
                    "x-nullable": true
                },
                "storage_used": {
                    "title": "Storage used",
                    "type": "number"
                },
                "last_time_holding_list_fetched": {
                    "title": "Last time holding list fetched",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "backupset": {
                    "title": "Backupset",
                    "type": "integer"
                }
            }
        },
        "BackupFlush": {
            "required": [
                "backupset_id"
            ],
            "type": "object",
            "properties": {
                "backupset_id": {
                    "title": "Backupset id",
                    "type": "integer"
                }
            }
        },
        "Tag": {
            "required": [
                "tag_name"
            ],
            "type": "object",
            "properties": {
                "tag_id": {
                    "title": "Tag id",
                    "type": "integer",
                    "readOnly": true
                },
                "tag_name": {
                    "title": "Tag name",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                }
            }
        },
        "CustomConfig": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "value": {
                    "title": "Value",
                    "type": "string",
                    "x-nullable": true
                }
            }
        },
        "Event": {
            "required": [
                "subsystem",
                "severity",
                "message",
                "last_modified_by"
            ],
            "type": "object",
            "properties": {
                "event_id": {
                    "title": "Event id",
                    "type": "integer",
                    "readOnly": true
                },
                "task_id": {
                    "title": "Task id",
                    "type": "string",
                    "maxLength": 64,
                    "x-nullable": true
                },
                "subsystem": {
                    "title": "Subsystem",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "severity": {
                    "title": "Severity",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 1
                },
                "message": {
                    "title": "Message",
                    "type": "string",
                    "minLength": 1
                },
                "last_modified_by": {
                    "title": "Last modified by",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "created_on_timestamp": {
                    "title": "Created on timestamp",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "last_modified_timestamp": {
                    "title": "Last modified timestamp",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                }
            }
        },
        "DevicesUsed": {
            "type": "object",
            "properties": {}
        },
        "LicenseFeaturesUsed": {
            "type": "object",
            "properties": {}
        },
        "BackupRunSummary": {
            "required": [
                "runtype",
                "datetime"
            ],
            "type": "object",
            "properties": {
                "backuprun_id": {
                    "title": "Backuprun id",
                    "type": "integer",
                    "readOnly": true
                },
                "runtype": {
                    "title": "Runtype",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backupsetname": {
                    "title": "Backupsetname",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "datetime": {
                    "title": "Datetime",
                    "type": "string",
                    "format": "date-time"
                },
                "backup_level": {
                    "title": "Backup level",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "maxLength": 64,
                    "x-nullable": true
                },
                "completed": {
                    "title": "Completed",
                    "type": "boolean"
                }
            }
        },
        "BackupRunReport": {
            "required": [
                "backuprun",
                "runtype",
                "timestamp",
                "rundate",
                "runtime"
            ],
            "type": "object",
            "properties": {
                "backup_report_id": {
                    "title": "Backup report id",
                    "type": "integer",
                    "readOnly": true
                },
                "backuprun": {
                    "title": "Backuprun",
                    "type": "integer"
                },
                "runtype": {
                    "title": "Runtype",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backupsetname": {
                    "title": "Backupsetname",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "backupset_id": {
                    "title": "Backupset id",
                    "type": "integer",
                    "readOnly": true
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "maxLength": 64,
                    "x-nullable": true
                },
                "timestamp": {
                    "title": "Timestamp",
                    "type": "string",
                    "format": "date-time"
                },
                "rundate": {
                    "title": "Rundate",
                    "type": "string",
                    "format": "date"
                },
                "runtime": {
                    "title": "Runtime",
                    "type": "string"
                },
                "report": {
                    "title": "Report",
                    "type": "object",
                    "readOnly": true
                }
            }
        },
        "PresetTemplateState": {
            "required": [
                "updated_custom_template_name"
            ],
            "type": "object",
            "properties": {
                "updated_custom_template_name": {
                    "title": "Updated custom template name",
                    "type": "string"
                }
            }
        },
        "BackupRunTemplates": {
            "required": [
                "template_name",
                "selection_list"
            ],
            "type": "object",
            "properties": {
                "template_id": {
                    "title": "Template id",
                    "type": "integer",
                    "readOnly": true
                },
                "template_name": {
                    "title": "Template name",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "selection_list": {
                    "title": "Selection list",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "CustomReport": {
            "required": [
                "backupset_id",
                "selection_list"
            ],
            "type": "object",
            "properties": {
                "backupset_id": {
                    "title": "Backupset id",
                    "type": "integer"
                },
                "selection_list": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "x-nullable": true
                    }
                }
            }
        },
        "Restore": {
            "type": "object",
            "properties": {
                "restore_id": {
                    "title": "Restore id",
                    "type": "integer",
                    "readOnly": true
                },
                "backupset_details": {
                    "$ref": "#/definitions/BackupSet"
                }
            }
        },
        "Amgetindex": {
            "required": [
                "config"
            ],
            "type": "object",
            "properties": {
                "config": {
                    "title": "Config",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "VMWareDiscover": {
            "required": [
                "backupset_id",
                "hostname"
            ],
            "type": "object",
            "properties": {
                "backupset_id": {
                    "title": "Backupset id",
                    "type": "integer"
                },
                "hostname": {
                    "title": "Hostname",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "RestoreHosts": {
            "required": [
                "backupset_id"
            ],
            "type": "object",
            "properties": {
                "backupset_id": {
                    "title": "Backupset id",
                    "type": "integer"
                }
            }
        },
        "RestoreHow": {
            "required": [
                "restore"
            ],
            "type": "object",
            "properties": {
                "restore_config_id": {
                    "title": "Restore config id",
                    "type": "integer",
                    "readOnly": true
                },
                "conflict_dir_selected": {
                    "title": "Conflict dir selected",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "conflict_file_selected": {
                    "title": "Conflict file selected",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "restore": {
                    "title": "Restore",
                    "type": "integer"
                }
            }
        },
        "RestoreNow": {
            "required": [
                "restore"
            ],
            "type": "object",
            "properties": {
                "restore_config_id": {
                    "title": "Restore config id",
                    "type": "integer",
                    "readOnly": true
                },
                "amclient_timelimit": {
                    "title": "Amclient timelimit",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "digest": {
                    "title": "Digest",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "restore": {
                    "title": "Restore",
                    "type": "integer"
                }
            }
        },
        "RestoreReset": {
            "required": [
                "restore_id"
            ],
            "type": "object",
            "properties": {
                "restore_id": {
                    "title": "Restore id",
                    "type": "integer"
                }
            }
        },
        "RestoreAbort": {
            "required": [
                "backupset_id"
            ],
            "type": "object",
            "properties": {
                "backupset_id": {
                    "title": "Backupset id",
                    "type": "integer"
                }
            }
        },
        "RestoreRun": {
            "required": [
                "backupset_id"
            ],
            "type": "object",
            "properties": {
                "backupset_id": {
                    "title": "Backupset id",
                    "type": "integer"
                }
            }
        },
        "RestoreWhat": {
            "required": [
                "restore"
            ],
            "type": "object",
            "properties": {
                "restore_config_id": {
                    "title": "Restore config id",
                    "type": "integer",
                    "readOnly": true
                },
                "client": {
                    "title": "Client",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "x-nullable": true
                },
                "dle_category": {
                    "title": "Dle category",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "restore_device": {
                    "title": "Restore device",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "date_time_human": {
                    "title": "Date time human",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "date_time_parsed": {
                    "title": "Date time parsed",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "config": {
                    "title": "Config",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "disk_device": {
                    "title": "Disk device",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1,
                    "x-nullable": true
                },
                "disk_name": {
                    "title": "Disk name",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1,
                    "x-nullable": true
                },
                "restore_pref": {
                    "title": "Restore pref",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "restore_search": {
                    "title": "Restore search",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "restore_pattern_type": {
                    "title": "Restore pattern type",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "dir_tree_json": {
                    "title": "Dir tree json",
                    "type": "string",
                    "minLength": 1,
                    "x-nullable": true
                },
                "named_dict": {
                    "title": "Named dict",
                    "type": "string",
                    "minLength": 1,
                    "x-nullable": true
                },
                "restore_list": {
                    "title": "Restore list",
                    "type": "string",
                    "minLength": 1,
                    "x-nullable": true
                },
                "restore_list_json": {
                    "title": "Restore list json",
                    "type": "string",
                    "minLength": 1,
                    "x-nullable": true
                },
                "is_encryption_enabled": {
                    "title": "Is encryption enabled",
                    "type": "boolean"
                },
                "is_compression_enabled": {
                    "title": "Is compression enabled",
                    "type": "boolean"
                },
                "encryption": {
                    "title": "Encryption",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "compression": {
                    "title": "Compression",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "restore": {
                    "title": "Restore",
                    "type": "integer"
                }
            }
        },
        "RestoreWhere": {
            "required": [
                "restore"
            ],
            "type": "object",
            "properties": {
                "restore_config_id": {
                    "title": "Restore config id",
                    "type": "integer",
                    "readOnly": true
                },
                "target_host": {
                    "title": "Target host",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "target_dir_type_default": {
                    "title": "Target dir type default",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "target_dir": {
                    "title": "Target dir",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1,
                    "x-nullable": true
                },
                "is_temp_dir_auto": {
                    "title": "Is temp dir auto",
                    "type": "boolean"
                },
                "temp_dir": {
                    "title": "Temp dir",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "elist": {
                    "title": "Elist",
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 1,
                    "x-nullable": true
                },
                "safe_mode": {
                    "title": "Safe mode",
                    "type": "string",
                    "maxLength": 2,
                    "minLength": 1,
                    "x-nullable": true
                },
                "ndmp_directory": {
                    "title": "Ndmp directory",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "x-nullable": true
                },
                "ndmp_filer_auth": {
                    "title": "Ndmp filer auth",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "ndmp_filer_host_name": {
                    "title": "Ndmp filer host name",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "ndmp_password": {
                    "title": "Ndmp password",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "ndmp_username": {
                    "title": "Ndmp username",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "ndmp_volume_name": {
                    "title": "Ndmp volume name",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "zmc_share_domain": {
                    "title": "Zmc share domain",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "zmc_share_password": {
                    "title": "Zmc share password",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "zmc_share_username": {
                    "title": "Zmc share username",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "datastore_name": {
                    "title": "Datastore name",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "esx_host_name": {
                    "title": "Esx host name",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "esx_username": {
                    "title": "Esx username",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "esx_password": {
                    "title": "Esx password",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "virtual_machine_name": {
                    "title": "Virtual machine name",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "vcenter_host_name": {
                    "title": "Vcenter host name",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "vcenter_ip": {
                    "title": "Vcenter ip",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "vcenter_password": {
                    "title": "Vcenter password",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "vcenter_username": {
                    "title": "Vcenter username",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "restore_temp_target_esx": {
                    "title": "Restore temp target esx",
                    "type": "boolean"
                },
                "restore_temp_target_vcenter": {
                    "title": "Restore temp target vcenter",
                    "type": "boolean"
                },
                "restore_ip": {
                    "title": "Restore ip",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "restore_user": {
                    "title": "Restore user",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "restore_path": {
                    "title": "Restore path",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "restore": {
                    "title": "Restore",
                    "type": "integer"
                }
            }
        },
        "ScheduleDays": {
            "type": "object",
            "properties": {
                "schedule_days_id": {
                    "title": "Schedule days id",
                    "type": "integer",
                    "readOnly": true
                },
                "sun": {
                    "title": "Sun",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1,
                    "x-nullable": true
                },
                "mon": {
                    "title": "Mon",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1,
                    "x-nullable": true
                },
                "tue": {
                    "title": "Tue",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1,
                    "x-nullable": true
                },
                "wed": {
                    "title": "Wed",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1,
                    "x-nullable": true
                },
                "thu": {
                    "title": "Thu",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1,
                    "x-nullable": true
                },
                "fri": {
                    "title": "Fri",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1,
                    "x-nullable": true
                },
                "sat": {
                    "title": "Sat",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1,
                    "x-nullable": true
                }
            }
        },
        "ScheduleWeeks": {
            "type": "object",
            "properties": {
                "schedule_weeks_id": {
                    "title": "Schedule weeks id",
                    "type": "integer",
                    "readOnly": true
                },
                "week1": {
                    "title": "Week1",
                    "type": "boolean",
                    "x-nullable": true
                },
                "week2": {
                    "title": "Week2",
                    "type": "boolean",
                    "x-nullable": true
                },
                "week3": {
                    "title": "Week3",
                    "type": "boolean",
                    "x-nullable": true
                },
                "week4": {
                    "title": "Week4",
                    "type": "boolean",
                    "x-nullable": true
                },
                "week5": {
                    "title": "Week5",
                    "type": "boolean",
                    "x-nullable": true
                }
            }
        },
        "ScheduleMonthDays": {
            "required": [
                "day1",
                "day2",
                "day3",
                "day4",
                "day5",
                "day6",
                "day7",
                "day8",
                "day9",
                "day10",
                "day11",
                "day12",
                "day13",
                "day14",
                "day15",
                "day16",
                "day17",
                "day18",
                "day19",
                "day20",
                "day21",
                "day22",
                "day23",
                "day24",
                "day25",
                "day26",
                "day27",
                "day28",
                "day29",
                "day30",
                "day31"
            ],
            "type": "object",
            "properties": {
                "schedule_month_days_id": {
                    "title": "Schedule month days id",
                    "type": "integer",
                    "readOnly": true
                },
                "day1": {
                    "title": "Day1",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1
                },
                "day2": {
                    "title": "Day2",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1
                },
                "day3": {
                    "title": "Day3",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1
                },
                "day4": {
                    "title": "Day4",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1
                },
                "day5": {
                    "title": "Day5",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1
                },
                "day6": {
                    "title": "Day6",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1
                },
                "day7": {
                    "title": "Day7",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1
                },
                "day8": {
                    "title": "Day8",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1
                },
                "day9": {
                    "title": "Day9",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1
                },
                "day10": {
                    "title": "Day10",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1
                },
                "day11": {
                    "title": "Day11",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1
                },
                "day12": {
                    "title": "Day12",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1
                },
                "day13": {
                    "title": "Day13",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1
                },
                "day14": {
                    "title": "Day14",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1
                },
                "day15": {
                    "title": "Day15",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1
                },
                "day16": {
                    "title": "Day16",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1
                },
                "day17": {
                    "title": "Day17",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1
                },
                "day18": {
                    "title": "Day18",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1
                },
                "day19": {
                    "title": "Day19",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1
                },
                "day20": {
                    "title": "Day20",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1
                },
                "day21": {
                    "title": "Day21",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1
                },
                "day22": {
                    "title": "Day22",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1
                },
                "day23": {
                    "title": "Day23",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1
                },
                "day24": {
                    "title": "Day24",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1
                },
                "day25": {
                    "title": "Day25",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1
                },
                "day26": {
                    "title": "Day26",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1
                },
                "day27": {
                    "title": "Day27",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1
                },
                "day28": {
                    "title": "Day28",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1
                },
                "day29": {
                    "title": "Day29",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1
                },
                "day30": {
                    "title": "Day30",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1
                },
                "day31": {
                    "title": "Day31",
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1
                }
            }
        },
        "ScheduleMonths": {
            "type": "object",
            "properties": {
                "schedule_months_id": {
                    "title": "Schedule months id",
                    "type": "integer",
                    "readOnly": true
                },
                "jan": {
                    "title": "Jan",
                    "type": "boolean",
                    "x-nullable": true
                },
                "feb": {
                    "title": "Feb",
                    "type": "boolean",
                    "x-nullable": true
                },
                "mar": {
                    "title": "Mar",
                    "type": "boolean",
                    "x-nullable": true
                },
                "apr": {
                    "title": "Apr",
                    "type": "boolean",
                    "x-nullable": true
                },
                "may": {
                    "title": "May",
                    "type": "boolean",
                    "x-nullable": true
                },
                "jun": {
                    "title": "Jun",
                    "type": "boolean",
                    "x-nullable": true
                },
                "jul": {
                    "title": "Jul",
                    "type": "boolean",
                    "x-nullable": true
                },
                "aug": {
                    "title": "Aug",
                    "type": "boolean",
                    "x-nullable": true
                },
                "sep": {
                    "title": "Sep",
                    "type": "boolean",
                    "x-nullable": true
                },
                "oct": {
                    "title": "Oct",
                    "type": "boolean",
                    "x-nullable": true
                },
                "nov": {
                    "title": "Nov",
                    "type": "boolean",
                    "x-nullable": true
                },
                "dec": {
                    "title": "Dec",
                    "type": "boolean",
                    "x-nullable": true
                }
            }
        },
        "Schedule": {
            "required": [
                "start_time_minute"
            ],
            "type": "object",
            "properties": {
                "schedule_id": {
                    "title": "Schedule id",
                    "type": "integer",
                    "readOnly": true
                },
                "schedule_name": {
                    "title": "Schedule name",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "schedule_start_time": {
                    "title": "Schedule start time",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "start_time_minute": {
                    "title": "Start time minute",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "start_time_hours": {
                    "title": "Start time hours",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "schedule_type": {
                    "title": "Schedule type",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "full_back_up_time_specified": {
                    "title": "Full back up time specified",
                    "type": "boolean"
                },
                "full_back_up_start_time_hours": {
                    "title": "Full back up start time hours",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "x-nullable": true
                },
                "full_back_up_start_time_minute": {
                    "title": "Full back up start time minute",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "schedule_days_id": {
                    "title": "Schedule days id",
                    "type": "integer",
                    "x-nullable": true
                },
                "schedule_weeks_id": {
                    "title": "Schedule weeks id",
                    "type": "integer",
                    "x-nullable": true
                },
                "schedule_months_id": {
                    "title": "Schedule months id",
                    "type": "integer",
                    "x-nullable": true
                },
                "schedule_month_days_id": {
                    "title": "Schedule month days id",
                    "type": "integer",
                    "x-nullable": true
                },
                "schedule_days": {
                    "$ref": "#/definitions/ScheduleDays"
                },
                "schedule_weeks": {
                    "$ref": "#/definitions/ScheduleWeeks"
                },
                "schedule_month_days": {
                    "$ref": "#/definitions/ScheduleMonthDays"
                },
                "schedule_months": {
                    "$ref": "#/definitions/ScheduleMonths"
                },
                "schedule_time_zone": {
                    "title": "Schedule time zone",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                }
            }
        },
        "AEBackupServer": {
            "required": [
                "server_name",
                "server_region",
                "server_ip",
                "server_port",
                "ae_version"
            ],
            "type": "object",
            "properties": {
                "server_id": {
                    "title": "Server id",
                    "type": "integer",
                    "readOnly": true
                },
                "server_name": {
                    "title": "Server name",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "server_region": {
                    "title": "Server region",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "server_ip": {
                    "title": "Server ip",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "server_port": {
                    "title": "Server port",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "datetime_registered": {
                    "title": "Datetime registered",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "ae_version": {
                    "title": "Ae version",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 1
                }
            }
        },
        "AEBackupServerInstallHealth": {
            "required": [
                "aebackup_server",
                "server_status"
            ],
            "type": "object",
            "properties": {
                "aebackup_server": {
                    "title": "Aebackup server",
                    "type": "integer"
                },
                "server_status": {
                    "title": "Server status",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "datetime_lastcheck": {
                    "title": "Datetime lastcheck",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                }
            }
        },
        "CategoryType": {
            "required": [
                "category_name",
                "dle_type"
            ],
            "type": "object",
            "properties": {
                "category_name": {
                    "title": "Category name",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "dle_type": {
                    "title": "Dle type",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                }
            }
        },
        "DiskListEntry": {
            "required": [
                "category_type",
                "hostname",
                "directory_path",
                "last_modified_by",
                "comments",
                "backup_estimate",
                "backup_strategy",
                "backup_staging",
                "extended_attribute",
                "backuptool",
                "dle_filename",
                "tags"
            ],
            "type": "object",
            "properties": {
                "dle_id": {
                    "title": "Dle id",
                    "type": "integer",
                    "readOnly": true
                },
                "category_type": {
                    "title": "Category type",
                    "type": "integer"
                },
                "category_details": {
                    "$ref": "#/definitions/CategoryType"
                },
                "hostname": {
                    "title": "Hostname",
                    "type": "string",
                    "maxLength": 253,
                    "minLength": 1
                },
                "directory_path": {
                    "title": "Directory path",
                    "type": "string",
                    "maxLength": 4096,
                    "minLength": 1
                },
                "encrypt_strategy": {
                    "title": "Encrypt strategy",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "compress_strategy": {
                    "title": "Compress strategy",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "exclude_path": {
                    "title": "Exclude path",
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 1,
                    "x-nullable": true
                },
                "last_modified_date": {
                    "title": "Last modified date",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "last_modified_by": {
                    "title": "Last modified by",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "backup_estimate": {
                    "title": "Backup estimate",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backup_strategy": {
                    "title": "Backup strategy",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "backup_staging": {
                    "title": "Backup staging",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "extended_attribute": {
                    "title": "Extended attribute",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backuptool": {
                    "title": "Backuptool",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "dle_filename": {
                    "title": "Dle filename",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "backupsets": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                },
                "active": {
                    "title": "Active",
                    "type": "boolean"
                }
            }
        },
        "MSExchange": {
            "required": [
                "category_type",
                "hostname",
                "directory_path",
                "version",
                "server_name",
                "database",
                "custom_compress",
                "last_modified_by",
                "comments",
                "backup_estimate",
                "backup_strategy",
                "backup_staging",
                "extended_attribute",
                "backuptool",
                "data_sources",
                "dle_filename",
                "tags"
            ],
            "type": "object",
            "properties": {
                "dle_id": {
                    "title": "Dle id",
                    "type": "integer",
                    "readOnly": true
                },
                "category_type": {
                    "title": "Category type",
                    "type": "integer"
                },
                "category_details": {
                    "$ref": "#/definitions/CategoryType"
                },
                "hostname": {
                    "title": "Hostname",
                    "type": "string",
                    "maxLength": 253,
                    "minLength": 1
                },
                "directory_path": {
                    "title": "Directory path",
                    "type": "string",
                    "maxLength": 4096,
                    "minLength": 1
                },
                "version": {
                    "title": "Version",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "server_name": {
                    "title": "Server name",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "database": {
                    "title": "Database",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "encrypt_strategy": {
                    "title": "Encrypt strategy",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "compress_strategy": {
                    "title": "Compress strategy",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "custom_compress": {
                    "title": "Custom compress",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "last_modified_date": {
                    "title": "Last modified date",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "last_modified_by": {
                    "title": "Last modified by",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "backup_estimate": {
                    "title": "Backup estimate",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backup_strategy": {
                    "title": "Backup strategy",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "backup_staging": {
                    "title": "Backup staging",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "extended_attribute": {
                    "title": "Extended attribute",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backuptool": {
                    "title": "Backuptool",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "data_sources": {
                    "title": "Data sources",
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 1
                },
                "dle_filename": {
                    "title": "Dle filename",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "backupsets": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                }
            }
        },
        "MSSharepoint": {
            "required": [
                "category_type",
                "hostname",
                "directory_path",
                "custom_compress",
                "last_modified_by",
                "comments",
                "backup_estimate",
                "backup_strategy",
                "backup_staging",
                "extended_attribute",
                "backuptool",
                "data_sources",
                "dle_filename",
                "tags"
            ],
            "type": "object",
            "properties": {
                "dle_id": {
                    "title": "Dle id",
                    "type": "integer",
                    "readOnly": true
                },
                "category_type": {
                    "title": "Category type",
                    "type": "integer"
                },
                "category_details": {
                    "$ref": "#/definitions/CategoryType"
                },
                "hostname": {
                    "title": "Hostname",
                    "type": "string",
                    "maxLength": 253,
                    "minLength": 1
                },
                "directory_path": {
                    "title": "Directory path",
                    "type": "string",
                    "maxLength": 4096,
                    "minLength": 1
                },
                "encrypt_strategy": {
                    "title": "Encrypt strategy",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "compress_strategy": {
                    "title": "Compress strategy",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "custom_compress": {
                    "title": "Custom compress",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "last_modified_date": {
                    "title": "Last modified date",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "last_modified_by": {
                    "title": "Last modified by",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "backup_estimate": {
                    "title": "Backup estimate",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backup_strategy": {
                    "title": "Backup strategy",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "backup_staging": {
                    "title": "Backup staging",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "extended_attribute": {
                    "title": "Extended attribute",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backuptool": {
                    "title": "Backuptool",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "data_sources": {
                    "title": "Data sources",
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 1
                },
                "dle_filename": {
                    "title": "Dle filename",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "backupsets": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                }
            }
        },
        "AEClientCheckHost": {
            "required": [
                "dle",
                "backupset"
            ],
            "type": "object",
            "properties": {
                "dle": {
                    "title": "Dle",
                    "type": "integer"
                },
                "backupset": {
                    "title": "Backupset",
                    "type": "integer"
                },
                "aeclient_version": {
                    "title": "Aeclient version",
                    "type": "string",
                    "maxLength": 128,
                    "x-nullable": true
                },
                "aeclient_os": {
                    "title": "Aeclient os",
                    "type": "string",
                    "maxLength": 64,
                    "x-nullable": true
                },
                "client_check": {
                    "title": "Client check",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "checkhost_timestamp": {
                    "title": "Checkhost timestamp",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "checkhost_status": {
                    "title": "Checkhost status",
                    "type": "string",
                    "maxLength": 16,
                    "x-nullable": true
                },
                "checkhost_message": {
                    "title": "Checkhost message",
                    "type": "string",
                    "maxLength": 4096,
                    "x-nullable": true
                }
            }
        },
        "Mssql": {
            "required": [
                "category_type",
                "hostname",
                "directory_path",
                "custom_compress",
                "last_modified_by",
                "comments",
                "backup_estimate",
                "backup_strategy",
                "backup_staging",
                "extended_attribute",
                "backuptool",
                "server_name",
                "instance_name",
                "database_name",
                "dle_filename",
                "tags"
            ],
            "type": "object",
            "properties": {
                "dle_id": {
                    "title": "Dle id",
                    "type": "integer",
                    "readOnly": true
                },
                "category_type": {
                    "title": "Category type",
                    "type": "integer"
                },
                "category_details": {
                    "$ref": "#/definitions/CategoryType"
                },
                "hostname": {
                    "title": "Hostname",
                    "type": "string",
                    "maxLength": 253,
                    "minLength": 1
                },
                "directory_path": {
                    "title": "Directory path",
                    "type": "string",
                    "maxLength": 4096,
                    "minLength": 1
                },
                "encrypt_strategy": {
                    "title": "Encrypt strategy",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "compress_strategy": {
                    "title": "Compress strategy",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "custom_compress": {
                    "title": "Custom compress",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "last_modified_date": {
                    "title": "Last modified date",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "last_modified_by": {
                    "title": "Last modified by",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "backup_estimate": {
                    "title": "Backup estimate",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backup_strategy": {
                    "title": "Backup strategy",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "backup_staging": {
                    "title": "Backup staging",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "extended_attribute": {
                    "title": "Extended attribute",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backuptool": {
                    "title": "Backuptool",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "version": {
                    "title": "Version",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 1,
                    "x-nullable": true
                },
                "server_name": {
                    "title": "Server name",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "instance_name": {
                    "title": "Instance name",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "database_name": {
                    "title": "Database name",
                    "type": "string",
                    "minLength": 1
                },
                "dle_filename": {
                    "title": "Dle filename",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "backupsets": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                }
            }
        },
        "OracleLinux": {
            "required": [
                "category_type",
                "hostname",
                "directory_path",
                "last_modified_by",
                "comments",
                "backup_estimate",
                "backup_strategy",
                "backup_staging",
                "extended_attribute",
                "backuptool",
                "sid_listname",
                "dle_filename",
                "tags"
            ],
            "type": "object",
            "properties": {
                "dle_id": {
                    "title": "Dle id",
                    "type": "integer",
                    "readOnly": true
                },
                "category_type": {
                    "title": "Category type",
                    "type": "integer"
                },
                "category_details": {
                    "$ref": "#/definitions/CategoryType"
                },
                "hostname": {
                    "title": "Hostname",
                    "type": "string",
                    "maxLength": 253,
                    "minLength": 1
                },
                "directory_path": {
                    "title": "Directory path",
                    "type": "string",
                    "maxLength": 4096,
                    "minLength": 1
                },
                "encrypt_strategy": {
                    "title": "Encrypt strategy",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "compress_strategy": {
                    "title": "Compress strategy",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "last_modified_date": {
                    "title": "Last modified date",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "last_modified_by": {
                    "title": "Last modified by",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "backup_estimate": {
                    "title": "Backup estimate",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backup_strategy": {
                    "title": "Backup strategy",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "backup_staging": {
                    "title": "Backup staging",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "extended_attribute": {
                    "title": "Extended attribute",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backuptool": {
                    "title": "Backuptool",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "sid_listname": {
                    "title": "Sid listname",
                    "type": "string",
                    "minLength": 1
                },
                "dle_filename": {
                    "title": "Dle filename",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "backupsets": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                }
            }
        },
        "OracleWindows": {
            "required": [
                "category_type",
                "hostname",
                "directory_path",
                "custom_compress",
                "last_modified_by",
                "comments",
                "backup_estimate",
                "backup_strategy",
                "backup_staging",
                "extended_attribute",
                "backuptool",
                "dle_filename",
                "tags"
            ],
            "type": "object",
            "properties": {
                "dle_id": {
                    "title": "Dle id",
                    "type": "integer",
                    "readOnly": true
                },
                "category_type": {
                    "title": "Category type",
                    "type": "integer"
                },
                "category_details": {
                    "$ref": "#/definitions/CategoryType"
                },
                "hostname": {
                    "title": "Hostname",
                    "type": "string",
                    "maxLength": 253,
                    "minLength": 1
                },
                "directory_path": {
                    "title": "Directory path",
                    "type": "string",
                    "maxLength": 4096,
                    "minLength": 1
                },
                "encrypt_strategy": {
                    "title": "Encrypt strategy",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "compress_strategy": {
                    "title": "Compress strategy",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "custom_compress": {
                    "title": "Custom compress",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "last_modified_date": {
                    "title": "Last modified date",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "last_modified_by": {
                    "title": "Last modified by",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "backup_estimate": {
                    "title": "Backup estimate",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backup_strategy": {
                    "title": "Backup strategy",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "backup_staging": {
                    "title": "Backup staging",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "extended_attribute": {
                    "title": "Extended attribute",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backuptool": {
                    "title": "Backuptool",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "dle_filename": {
                    "title": "Dle filename",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "backupsets": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                }
            }
        },
        "PostgreSQL": {
            "required": [
                "category_type",
                "hostname",
                "directory_path",
                "last_modified_by",
                "comments",
                "backup_estimate",
                "backup_strategy",
                "backup_staging",
                "extended_attribute",
                "backuptool",
                "data_directory",
                "dle_filename",
                "tags"
            ],
            "type": "object",
            "properties": {
                "dle_id": {
                    "title": "Dle id",
                    "type": "integer",
                    "readOnly": true
                },
                "category_type": {
                    "title": "Category type",
                    "type": "integer"
                },
                "category_details": {
                    "$ref": "#/definitions/CategoryType"
                },
                "hostname": {
                    "title": "Hostname",
                    "type": "string",
                    "maxLength": 253,
                    "minLength": 1
                },
                "directory_path": {
                    "title": "Directory path",
                    "type": "string",
                    "maxLength": 4096,
                    "minLength": 1
                },
                "encrypt_strategy": {
                    "title": "Encrypt strategy",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "compress_strategy": {
                    "title": "Compress strategy",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "last_modified_date": {
                    "title": "Last modified date",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "last_modified_by": {
                    "title": "Last modified by",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "backup_estimate": {
                    "title": "Backup estimate",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backup_strategy": {
                    "title": "Backup strategy",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "backup_staging": {
                    "title": "Backup staging",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "extended_attribute": {
                    "title": "Extended attribute",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backuptool": {
                    "title": "Backuptool",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "data_directory": {
                    "title": "Data directory",
                    "type": "string",
                    "minLength": 1
                },
                "dle_filename": {
                    "title": "Dle filename",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "backupsets": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                }
            }
        },
        "Linux": {
            "required": [
                "category_type",
                "hostname",
                "directory_path",
                "custom_compress",
                "last_modified_by",
                "comments",
                "backup_estimate",
                "backup_strategy",
                "backup_staging",
                "extended_attribute",
                "backuptool",
                "dle_filename",
                "tags"
            ],
            "type": "object",
            "properties": {
                "dle_id": {
                    "title": "Dle id",
                    "type": "integer",
                    "readOnly": true
                },
                "category_type": {
                    "title": "Category type",
                    "type": "integer"
                },
                "category_details": {
                    "$ref": "#/definitions/CategoryType"
                },
                "hostname": {
                    "title": "Hostname",
                    "type": "string",
                    "maxLength": 253,
                    "minLength": 1
                },
                "directory_path": {
                    "title": "Directory path",
                    "type": "string",
                    "maxLength": 4096,
                    "minLength": 1
                },
                "encrypt_strategy": {
                    "title": "Encrypt strategy",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "compress_strategy": {
                    "title": "Compress strategy",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "custom_compress": {
                    "title": "Custom compress",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "exclude_path": {
                    "title": "Exclude path",
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 1,
                    "x-nullable": true
                },
                "last_modified_date": {
                    "title": "Last modified date",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "last_modified_by": {
                    "title": "Last modified by",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "backup_estimate": {
                    "title": "Backup estimate",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backup_strategy": {
                    "title": "Backup strategy",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "backup_staging": {
                    "title": "Backup staging",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "extended_attribute": {
                    "title": "Extended attribute",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backuptool": {
                    "title": "Backuptool",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "dle_filename": {
                    "title": "Dle filename",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "backupsets": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                }
            }
        },
        "Mac": {
            "required": [
                "category_type",
                "hostname",
                "directory_path",
                "last_modified_by",
                "comments",
                "backup_estimate",
                "backup_strategy",
                "backup_staging",
                "extended_attribute",
                "backuptool",
                "dle_filename",
                "tags",
                "custom_compress"
            ],
            "type": "object",
            "properties": {
                "dle_id": {
                    "title": "Dle id",
                    "type": "integer",
                    "readOnly": true
                },
                "category_type": {
                    "title": "Category type",
                    "type": "integer"
                },
                "category_details": {
                    "$ref": "#/definitions/CategoryType"
                },
                "hostname": {
                    "title": "Hostname",
                    "type": "string",
                    "maxLength": 253,
                    "minLength": 1
                },
                "directory_path": {
                    "title": "Directory path",
                    "type": "string",
                    "maxLength": 4096,
                    "minLength": 1
                },
                "encrypt_strategy": {
                    "title": "Encrypt strategy",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "compress_strategy": {
                    "title": "Compress strategy",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "exclude_path": {
                    "title": "Exclude path",
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 1,
                    "x-nullable": true
                },
                "last_modified_date": {
                    "title": "Last modified date",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "last_modified_by": {
                    "title": "Last modified by",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "backup_estimate": {
                    "title": "Backup estimate",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backup_strategy": {
                    "title": "Backup strategy",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "backup_staging": {
                    "title": "Backup staging",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "extended_attribute": {
                    "title": "Extended attribute",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backuptool": {
                    "title": "Backuptool",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "dle_filename": {
                    "title": "Dle filename",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "backupsets": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                },
                "custom_compress": {
                    "title": "Custom compress",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                }
            }
        },
        "NDMP": {
            "required": [
                "category_type",
                "hostname",
                "filer_hostname",
                "directory_path",
                "last_modified_by",
                "comments",
                "backup_estimate",
                "backup_strategy",
                "data_path",
                "backup_staging",
                "extended_attribute",
                "backuptool",
                "vendor",
                "authentication_type",
                "volume_name",
                "directory",
                "username",
                "password",
                "dle_filename",
                "tags"
            ],
            "type": "object",
            "properties": {
                "dle_id": {
                    "title": "Dle id",
                    "type": "integer",
                    "readOnly": true
                },
                "category_type": {
                    "title": "Category type",
                    "type": "integer"
                },
                "category_details": {
                    "$ref": "#/definitions/CategoryType"
                },
                "hostname": {
                    "title": "Hostname",
                    "type": "string",
                    "maxLength": 253,
                    "minLength": 1
                },
                "filer_hostname": {
                    "title": "Filer hostname",
                    "type": "string",
                    "maxLength": 253,
                    "minLength": 1
                },
                "directory_path": {
                    "title": "Directory path",
                    "type": "string",
                    "maxLength": 4096,
                    "minLength": 1
                },
                "encrypt_strategy": {
                    "title": "Encrypt strategy",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "compress_strategy": {
                    "title": "Compress strategy",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "exclude_path": {
                    "title": "Exclude path",
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 1,
                    "x-nullable": true
                },
                "last_modified_date": {
                    "title": "Last modified date",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "last_modified_by": {
                    "title": "Last modified by",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "backup_estimate": {
                    "title": "Backup estimate",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backup_strategy": {
                    "title": "Backup strategy",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "data_path": {
                    "title": "Data path",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "backup_staging": {
                    "title": "Backup staging",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "extended_attribute": {
                    "title": "Extended attribute",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backuptool": {
                    "title": "Backuptool",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "vendor": {
                    "title": "Vendor",
                    "type": "string",
                    "minLength": 1
                },
                "authentication_type": {
                    "title": "Authentication type",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 1
                },
                "volume_name": {
                    "title": "Volume name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "directory": {
                    "title": "Directory",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "username": {
                    "title": "Username",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "password": {
                    "title": "Password",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "dle_filename": {
                    "title": "Dle filename",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "backupsets": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                }
            }
        },
        "Network": {
            "required": [
                "category_type",
                "hostname",
                "directory_path",
                "share_name",
                "last_modified_by",
                "comments",
                "backup_estimate",
                "backup_strategy",
                "backup_staging",
                "extended_attribute",
                "backuptool",
                "network_domain",
                "username",
                "password",
                "dle_filename",
                "tags"
            ],
            "type": "object",
            "properties": {
                "dle_id": {
                    "title": "Dle id",
                    "type": "integer",
                    "readOnly": true
                },
                "category_type": {
                    "title": "Category type",
                    "type": "integer"
                },
                "category_details": {
                    "$ref": "#/definitions/CategoryType"
                },
                "hostname": {
                    "title": "Hostname",
                    "type": "string",
                    "maxLength": 253,
                    "minLength": 1
                },
                "directory_path": {
                    "title": "Directory path",
                    "type": "string",
                    "maxLength": 4096,
                    "minLength": 1
                },
                "share_name": {
                    "title": "Share name",
                    "type": "string",
                    "minLength": 1
                },
                "encrypt_strategy": {
                    "title": "Encrypt strategy",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "compress_strategy": {
                    "title": "Compress strategy",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "exclude_path": {
                    "title": "Exclude path",
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 1,
                    "x-nullable": true
                },
                "last_modified_date": {
                    "title": "Last modified date",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "last_modified_by": {
                    "title": "Last modified by",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "backup_estimate": {
                    "title": "Backup estimate",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backup_strategy": {
                    "title": "Backup strategy",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "backup_staging": {
                    "title": "Backup staging",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "extended_attribute": {
                    "title": "Extended attribute",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backuptool": {
                    "title": "Backuptool",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "network_domain": {
                    "title": "Network domain",
                    "type": "string",
                    "minLength": 1
                },
                "username": {
                    "title": "Username",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "password": {
                    "title": "Password",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "dle_filename": {
                    "title": "Dle filename",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "backupsets": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                }
            }
        },
        "NFS": {
            "required": [
                "category_type",
                "hostname",
                "directory_path",
                "last_modified_by",
                "comments",
                "backup_estimate",
                "backup_strategy",
                "backup_staging",
                "extended_attribute",
                "backuptool",
                "dle_filename",
                "tags"
            ],
            "type": "object",
            "properties": {
                "dle_id": {
                    "title": "Dle id",
                    "type": "integer",
                    "readOnly": true
                },
                "category_type": {
                    "title": "Category type",
                    "type": "integer"
                },
                "category_details": {
                    "$ref": "#/definitions/CategoryType"
                },
                "hostname": {
                    "title": "Hostname",
                    "type": "string",
                    "maxLength": 253,
                    "minLength": 1
                },
                "directory_path": {
                    "title": "Directory path",
                    "type": "string",
                    "maxLength": 4096,
                    "minLength": 1
                },
                "encrypt_strategy": {
                    "title": "Encrypt strategy",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "compress_strategy": {
                    "title": "Compress strategy",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "exclude_path": {
                    "title": "Exclude path",
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 1,
                    "x-nullable": true
                },
                "last_modified_date": {
                    "title": "Last modified date",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "last_modified_by": {
                    "title": "Last modified by",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "backup_estimate": {
                    "title": "Backup estimate",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backup_strategy": {
                    "title": "Backup strategy",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "backup_staging": {
                    "title": "Backup staging",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "extended_attribute": {
                    "title": "Extended attribute",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backuptool": {
                    "title": "Backuptool",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "dle_filename": {
                    "title": "Dle filename",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "backupsets": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                }
            }
        },
        "Solaris": {
            "required": [
                "category_type",
                "hostname",
                "directory_path",
                "last_modified_by",
                "comments",
                "backup_estimate",
                "backup_strategy",
                "backup_staging",
                "extended_attribute",
                "backuptool",
                "dle_filename",
                "tags"
            ],
            "type": "object",
            "properties": {
                "dle_id": {
                    "title": "Dle id",
                    "type": "integer",
                    "readOnly": true
                },
                "category_type": {
                    "title": "Category type",
                    "type": "integer"
                },
                "category_details": {
                    "$ref": "#/definitions/CategoryType"
                },
                "hostname": {
                    "title": "Hostname",
                    "type": "string",
                    "maxLength": 253,
                    "minLength": 1
                },
                "directory_path": {
                    "title": "Directory path",
                    "type": "string",
                    "maxLength": 4096,
                    "minLength": 1
                },
                "encrypt_strategy": {
                    "title": "Encrypt strategy",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "compress_strategy": {
                    "title": "Compress strategy",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "exclude_path": {
                    "title": "Exclude path",
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 1,
                    "x-nullable": true
                },
                "last_modified_date": {
                    "title": "Last modified date",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "last_modified_by": {
                    "title": "Last modified by",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "backup_estimate": {
                    "title": "Backup estimate",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backup_strategy": {
                    "title": "Backup strategy",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "backup_staging": {
                    "title": "Backup staging",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "extended_attribute": {
                    "title": "Extended attribute",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backuptool": {
                    "title": "Backuptool",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "dle_filename": {
                    "title": "Dle filename",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "backupsets": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                }
            }
        },
        "WindowsNTFS": {
            "required": [
                "category_type",
                "hostname",
                "directory_path",
                "custom_compress",
                "last_modified_by",
                "comments",
                "backup_estimate",
                "backup_strategy",
                "backup_staging",
                "extended_attribute",
                "backuptool",
                "dle_filename",
                "tags"
            ],
            "type": "object",
            "properties": {
                "dle_id": {
                    "title": "Dle id",
                    "type": "integer",
                    "readOnly": true
                },
                "category_type": {
                    "title": "Category type",
                    "type": "integer"
                },
                "category_details": {
                    "$ref": "#/definitions/CategoryType"
                },
                "hostname": {
                    "title": "Hostname",
                    "type": "string",
                    "maxLength": 253,
                    "minLength": 1
                },
                "directory_path": {
                    "title": "Directory path",
                    "type": "string",
                    "maxLength": 4096,
                    "minLength": 1
                },
                "encrypt_strategy": {
                    "title": "Encrypt strategy",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "compress_strategy": {
                    "title": "Compress strategy",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "custom_compress": {
                    "title": "Custom compress",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "exclude_path": {
                    "title": "Exclude path",
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 1,
                    "x-nullable": true
                },
                "last_modified_date": {
                    "title": "Last modified date",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "last_modified_by": {
                    "title": "Last modified by",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "backup_estimate": {
                    "title": "Backup estimate",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backup_strategy": {
                    "title": "Backup strategy",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "backup_staging": {
                    "title": "Backup staging",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "extended_attribute": {
                    "title": "Extended attribute",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backuptool": {
                    "title": "Backuptool",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "dle_filename": {
                    "title": "Dle filename",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "backupsets": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                }
            }
        },
        "WindowsSystem": {
            "required": [
                "category_type",
                "hostname",
                "directory_path",
                "custom_compress",
                "last_modified_by",
                "comments",
                "backup_estimate",
                "backup_strategy",
                "backup_staging",
                "extended_attribute",
                "backuptool",
                "dle_filename",
                "tags"
            ],
            "type": "object",
            "properties": {
                "dle_id": {
                    "title": "Dle id",
                    "type": "integer",
                    "readOnly": true
                },
                "category_type": {
                    "title": "Category type",
                    "type": "integer"
                },
                "category_details": {
                    "$ref": "#/definitions/CategoryType"
                },
                "hostname": {
                    "title": "Hostname",
                    "type": "string",
                    "maxLength": 253,
                    "minLength": 1
                },
                "directory_path": {
                    "title": "Directory path",
                    "type": "string",
                    "maxLength": 4096,
                    "minLength": 1
                },
                "encrypt_strategy": {
                    "title": "Encrypt strategy",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "compress_strategy": {
                    "title": "Compress strategy",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "custom_compress": {
                    "title": "Custom compress",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "exclude_path": {
                    "title": "Exclude path",
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 1,
                    "x-nullable": true
                },
                "last_modified_date": {
                    "title": "Last modified date",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "last_modified_by": {
                    "title": "Last modified by",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "backup_estimate": {
                    "title": "Backup estimate",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backup_strategy": {
                    "title": "Backup strategy",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "backup_staging": {
                    "title": "Backup staging",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "extended_attribute": {
                    "title": "Extended attribute",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backuptool": {
                    "title": "Backuptool",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "dle_filename": {
                    "title": "Dle filename",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "backupsets": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                }
            }
        },
        "WindowsTemplate": {
            "required": [
                "category_type",
                "hostname",
                "directory_path",
                "custom_compress",
                "last_modified_by",
                "comments",
                "backup_estimate",
                "backup_strategy",
                "backup_staging",
                "extended_attribute",
                "backuptool",
                "dle_filename",
                "tags"
            ],
            "type": "object",
            "properties": {
                "dle_id": {
                    "title": "Dle id",
                    "type": "integer",
                    "readOnly": true
                },
                "category_type": {
                    "title": "Category type",
                    "type": "integer"
                },
                "category_details": {
                    "$ref": "#/definitions/CategoryType"
                },
                "hostname": {
                    "title": "Hostname",
                    "type": "string",
                    "maxLength": 253,
                    "minLength": 1
                },
                "directory_path": {
                    "title": "Directory path",
                    "type": "string",
                    "maxLength": 4096,
                    "minLength": 1
                },
                "encrypt_strategy": {
                    "title": "Encrypt strategy",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "compress_strategy": {
                    "title": "Compress strategy",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "custom_compress": {
                    "title": "Custom compress",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "exclude_path": {
                    "title": "Exclude path",
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 1,
                    "x-nullable": true
                },
                "last_modified_date": {
                    "title": "Last modified date",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "last_modified_by": {
                    "title": "Last modified by",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "backup_estimate": {
                    "title": "Backup estimate",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backup_strategy": {
                    "title": "Backup strategy",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "backup_staging": {
                    "title": "Backup staging",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "extended_attribute": {
                    "title": "Extended attribute",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backuptool": {
                    "title": "Backuptool",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "dle_filename": {
                    "title": "Dle filename",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "backupsets": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                }
            }
        },
        "MSHyperV": {
            "required": [
                "category_type",
                "hostname",
                "directory_path",
                "custom_compress",
                "last_modified_by",
                "comments",
                "backuptool",
                "backup_estimate",
                "backup_strategy",
                "backup_staging",
                "extended_attribute",
                "data_sources",
                "version",
                "server_name",
                "instance_name",
                "database",
                "dle_filename",
                "tags"
            ],
            "type": "object",
            "properties": {
                "dle_id": {
                    "title": "Dle id",
                    "type": "integer",
                    "readOnly": true
                },
                "category_type": {
                    "title": "Category type",
                    "type": "integer"
                },
                "category_details": {
                    "$ref": "#/definitions/CategoryType"
                },
                "hostname": {
                    "title": "Hostname",
                    "type": "string",
                    "maxLength": 253,
                    "minLength": 1
                },
                "directory_path": {
                    "title": "Directory path",
                    "type": "string",
                    "maxLength": 4096,
                    "minLength": 1
                },
                "encrypt_strategy": {
                    "title": "Encrypt strategy",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "compress_strategy": {
                    "title": "Compress strategy",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "custom_compress": {
                    "title": "Custom compress",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "last_modified_date": {
                    "title": "Last modified date",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "last_modified_by": {
                    "title": "Last modified by",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "backuptool": {
                    "title": "Backuptool",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "backup_estimate": {
                    "title": "Backup estimate",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backup_strategy": {
                    "title": "Backup strategy",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "backup_staging": {
                    "title": "Backup staging",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "extended_attribute": {
                    "title": "Extended attribute",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "data_sources": {
                    "title": "Data sources",
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 1
                },
                "version": {
                    "title": "Version",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "server_name": {
                    "title": "Server name",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "instance_name": {
                    "title": "Instance name",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "database": {
                    "title": "Database",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "dle_filename": {
                    "title": "Dle filename",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "backupsets": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                }
            }
        },
        "VMWare": {
            "required": [
                "category_type",
                "hostname",
                "esx_vcenter_hostname",
                "directory_path",
                "last_modified_by",
                "comments",
                "backup_estimate",
                "backup_strategy",
                "backup_staging",
                "extended_attribute",
                "backuptool",
                "vm_name",
                "esx_hostname",
                "datastore_name",
                "used_storage",
                "vcenter_username",
                "vcenter_password",
                "esx_username",
                "esx_password",
                "dle_filename",
                "quiesce",
                "tags"
            ],
            "type": "object",
            "properties": {
                "dle_id": {
                    "title": "Dle id",
                    "type": "integer",
                    "readOnly": true
                },
                "category_type": {
                    "title": "Category type",
                    "type": "integer"
                },
                "category_details": {
                    "$ref": "#/definitions/CategoryType"
                },
                "hostname": {
                    "title": "Hostname",
                    "type": "string",
                    "maxLength": 253,
                    "minLength": 1
                },
                "host_type": {
                    "title": "Host type",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "esx_vcenter_hostname": {
                    "title": "Esx vcenter hostname",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "directory_path": {
                    "title": "Directory path",
                    "type": "string",
                    "maxLength": 4096,
                    "minLength": 1
                },
                "encrypt_strategy": {
                    "title": "Encrypt strategy",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "compress_strategy": {
                    "title": "Compress strategy",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "last_modified_date": {
                    "title": "Last modified date",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "last_modified_by": {
                    "title": "Last modified by",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "backup_estimate": {
                    "title": "Backup estimate",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backup_strategy": {
                    "title": "Backup strategy",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "backup_staging": {
                    "title": "Backup staging",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "extended_attribute": {
                    "title": "Extended attribute",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "backuptool": {
                    "title": "Backuptool",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "vm_name": {
                    "title": "Vm name",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "esx_hostname": {
                    "title": "Esx hostname",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "datastore_name": {
                    "title": "Datastore name",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "used_storage": {
                    "title": "Used storage",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "vcenter_username": {
                    "title": "Vcenter username",
                    "type": "string",
                    "minLength": 1
                },
                "vcenter_password": {
                    "title": "Vcenter password",
                    "type": "string",
                    "minLength": 1
                },
                "esx_username": {
                    "title": "Esx username",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "esx_password": {
                    "title": "Esx password",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "dle_filename": {
                    "title": "Dle filename",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "quiesce": {
                    "title": "Quiesce",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 1
                },
                "backupsets": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                }
            }
        },
        "AwsS3Storage": {
            "required": [
                "storage_device_name",
                "category_type",
                "comments",
                "storage_device_status",
                "access_key",
                "secret_key",
                "cloud_url_path",
                "cloud_object_value",
                "cloud_object_abbr",
                "cloud_encrypt",
                "max_total_media",
                "tags",
                "ae_backup_servers"
            ],
            "type": "object",
            "properties": {
                "storage_device_id": {
                    "title": "Storage device id",
                    "type": "integer",
                    "readOnly": true
                },
                "storage_device_name": {
                    "title": "Storage device name",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1
                },
                "category_type": {
                    "title": "Category type",
                    "type": "integer"
                },
                "category_details": {
                    "$ref": "#/definitions/StorageCategoryTypeSerializer"
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 1
                },
                "storage_device_status": {
                    "title": "Storage device status",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "last_modified_date": {
                    "title": "Last modified date",
                    "type": "string",
                    "format": "date-time"
                },
                "last_modified_by": {
                    "title": "Last modified by",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "access_key": {
                    "title": "Access key",
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 1
                },
                "secret_key": {
                    "title": "Secret key",
                    "type": "string",
                    "minLength": 1
                },
                "aws_user_token": {
                    "title": "Aws user token",
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 1,
                    "x-nullable": true
                },
                "storage_option": {
                    "title": "Storage option",
                    "type": "string",
                    "enum": [
                        "Reduced Redundancy(RRS)",
                        "Standard",
                        "Standard_IA",
                        "Onezone_IA",
                        "Hot",
                        "Cool"
                    ],
                    "x-nullable": true
                },
                "reuse_connections": {
                    "title": "Reuse connections",
                    "type": "boolean"
                },
                "secure_communications": {
                    "title": "Secure communications",
                    "type": "boolean"
                },
                "cloud_url_path": {
                    "title": "Cloud url path",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "bucket_name": {
                    "title": "Bucket name",
                    "type": "string",
                    "enum": [
                        "USE DNS",
                        "ON URL PATH"
                    ],
                    "x-nullable": true
                },
                "cloud_object_value": {
                    "title": "Cloud object value",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "cloud_object_abbr": {
                    "title": "Cloud object abbr",
                    "type": "string",
                    "enum": [
                        "MIB",
                        "KIB"
                    ]
                },
                "cloud_encrypt": {
                    "title": "Cloud encrypt",
                    "type": "string",
                    "enum": [
                        "NONE",
                        "AES256"
                    ]
                },
                "max_total_media": {
                    "title": "Max total media",
                    "type": "integer",
                    "maximum": 4294967295,
                    "minimum": 0
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                },
                "ae_backup_servers": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                },
                "guid": {
                    "title": "Guid",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 1,
                    "x-nullable": true
                }
            }
        },
        "AzureCloudStorage": {
            "required": [
                "storage_device_name",
                "category_type",
                "comments",
                "storage_device_status",
                "access_key",
                "secret_key",
                "cloud_url_path",
                "cloud_object_value",
                "cloud_object_abbr",
                "cloud_encrypt",
                "max_total_media",
                "tags",
                "ae_backup_servers",
                "account_name",
                "account_key"
            ],
            "type": "object",
            "properties": {
                "storage_device_id": {
                    "title": "Storage device id",
                    "type": "integer",
                    "readOnly": true
                },
                "storage_device_name": {
                    "title": "Storage device name",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1
                },
                "category_type": {
                    "title": "Category type",
                    "type": "integer"
                },
                "category_details": {
                    "$ref": "#/definitions/StorageCategoryTypeSerializer"
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 1
                },
                "storage_device_status": {
                    "title": "Storage device status",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "last_modified_date": {
                    "title": "Last modified date",
                    "type": "string",
                    "format": "date-time"
                },
                "last_modified_by": {
                    "title": "Last modified by",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "access_key": {
                    "title": "Access key",
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 1
                },
                "secret_key": {
                    "title": "Secret key",
                    "type": "string",
                    "minLength": 1
                },
                "storage_option": {
                    "title": "Storage option",
                    "type": "string",
                    "enum": [
                        "Reduced Redundancy(RRS)",
                        "Standard",
                        "Standard_IA",
                        "Onezone_IA",
                        "Hot",
                        "Cool"
                    ],
                    "x-nullable": true
                },
                "reuse_connections": {
                    "title": "Reuse connections",
                    "type": "boolean"
                },
                "secure_communications": {
                    "title": "Secure communications",
                    "type": "boolean"
                },
                "cloud_url_path": {
                    "title": "Cloud url path",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "bucket_name": {
                    "title": "Bucket name",
                    "type": "string",
                    "enum": [
                        "USE DNS",
                        "ON URL PATH"
                    ],
                    "x-nullable": true
                },
                "cloud_object_value": {
                    "title": "Cloud object value",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "cloud_object_abbr": {
                    "title": "Cloud object abbr",
                    "type": "string",
                    "enum": [
                        "MIB",
                        "KIB"
                    ]
                },
                "cloud_encrypt": {
                    "title": "Cloud encrypt",
                    "type": "string",
                    "enum": [
                        "NONE",
                        "AES256"
                    ]
                },
                "max_total_media": {
                    "title": "Max total media",
                    "type": "integer",
                    "maximum": 4294967295,
                    "minimum": 0
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                },
                "ae_backup_servers": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                },
                "account_name": {
                    "title": "Account name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "account_key": {
                    "title": "Account key",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                }
            }
        },
        "GoogleStorage": {
            "required": [
                "storage_device_name",
                "category_type",
                "comments",
                "storage_device_status",
                "access_key",
                "secret_key",
                "google_storage_option",
                "cloud_object_value",
                "cloud_object_abbr",
                "max_total_media",
                "tags",
                "ae_backup_servers"
            ],
            "type": "object",
            "properties": {
                "storage_device_id": {
                    "title": "Storage device id",
                    "type": "integer",
                    "readOnly": true
                },
                "storage_device_name": {
                    "title": "Storage device name",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1
                },
                "category_type": {
                    "title": "Category type",
                    "type": "integer"
                },
                "category_details": {
                    "$ref": "#/definitions/StorageCategoryTypeSerializer"
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 1
                },
                "storage_device_status": {
                    "title": "Storage device status",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "last_modified_date": {
                    "title": "Last modified date",
                    "type": "string",
                    "format": "date-time"
                },
                "last_modified_by": {
                    "title": "Last modified by",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "access_key": {
                    "title": "Access key",
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 1
                },
                "secret_key": {
                    "title": "Secret key",
                    "type": "string",
                    "minLength": 1
                },
                "google_storage_option": {
                    "title": "Google storage option",
                    "type": "string",
                    "enum": [
                        "Standard",
                        "Durable Reduced Availability",
                        "Nearline"
                    ]
                },
                "reuse_connections": {
                    "title": "Reuse connections",
                    "type": "boolean"
                },
                "secure_communications": {
                    "title": "Secure communications",
                    "type": "boolean"
                },
                "cloud_object_value": {
                    "title": "Cloud object value",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "cloud_object_abbr": {
                    "title": "Cloud object abbr",
                    "type": "string",
                    "enum": [
                        "MIB",
                        "KIB"
                    ]
                },
                "max_total_media": {
                    "title": "Max total media",
                    "type": "integer",
                    "maximum": 4294967295,
                    "minimum": 0
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                },
                "ae_backup_servers": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                }
            }
        },
        "OpenStackStorage": {
            "required": [
                "storage_device_name",
                "comments",
                "storage_device_status",
                "access_key",
                "secret_key",
                "category_type",
                "auth_plugin_path",
                "cloud_object_value",
                "cloud_object_abbr",
                "max_total_media",
                "tags",
                "ae_backup_servers",
                "os_project_id",
                "os_project_name",
                "os_user_domain_name"
            ],
            "type": "object",
            "properties": {
                "storage_device_id": {
                    "title": "Storage device id",
                    "type": "integer",
                    "readOnly": true
                },
                "storage_device_name": {
                    "title": "Storage device name",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 1
                },
                "storage_device_status": {
                    "title": "Storage device status",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "last_modified_date": {
                    "title": "Last modified date",
                    "type": "string",
                    "format": "date-time"
                },
                "last_modified_by": {
                    "title": "Last modified by",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "access_key": {
                    "title": "Access key",
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 1
                },
                "secret_key": {
                    "title": "Secret key",
                    "type": "string",
                    "minLength": 1
                },
                "category_type": {
                    "title": "Category type",
                    "type": "integer"
                },
                "category_details": {
                    "$ref": "#/definitions/StorageCategoryTypeSerializer"
                },
                "auth_service_hostname": {
                    "title": "Auth service hostname",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "storage_api_version": {
                    "title": "Storage api version",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 1,
                    "x-nullable": true
                },
                "secure_communications": {
                    "title": "Secure communications",
                    "type": "boolean"
                },
                "auth_plugin_path": {
                    "title": "Auth plugin path",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "bucket_name": {
                    "title": "Bucket name",
                    "type": "string",
                    "enum": [
                        "USE DNS",
                        "ON URL PATH"
                    ],
                    "x-nullable": true
                },
                "cloud_object_value": {
                    "title": "Cloud object value",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "cloud_object_abbr": {
                    "title": "Cloud object abbr",
                    "type": "string",
                    "enum": [
                        "MIB",
                        "KIB"
                    ]
                },
                "reuse_connections": {
                    "title": "Reuse connections",
                    "type": "boolean"
                },
                "use_untrusted_certificate": {
                    "title": "Use untrusted certificate",
                    "type": "boolean"
                },
                "trusted_site_certificate": {
                    "title": "Trusted site certificate",
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 1,
                    "x-nullable": true
                },
                "max_total_media": {
                    "title": "Max total media",
                    "type": "integer",
                    "maximum": 4294967295,
                    "minimum": 0
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                },
                "ae_backup_servers": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                },
                "os_project_id": {
                    "title": "Os project id",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "os_project_name": {
                    "title": "Os project name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "os_user_domain_name": {
                    "title": "Os user domain name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                }
            }
        },
        "S3CompatibleStorage": {
            "required": [
                "storage_device_name",
                "comments",
                "category_type",
                "storage_device_status",
                "access_key",
                "secret_key",
                "cloud_url_path",
                "cloud_object_value",
                "cloud_object_abbr",
                "max_total_media",
                "tags",
                "ae_backup_servers"
            ],
            "type": "object",
            "properties": {
                "storage_device_id": {
                    "title": "Storage device id",
                    "type": "integer",
                    "readOnly": true
                },
                "storage_device_name": {
                    "title": "Storage device name",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 1
                },
                "category_type": {
                    "title": "Category type",
                    "type": "integer"
                },
                "category_details": {
                    "$ref": "#/definitions/StorageCategoryTypeSerializer"
                },
                "storage_device_status": {
                    "title": "Storage device status",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "last_modified_date": {
                    "title": "Last modified date",
                    "type": "string",
                    "format": "date-time"
                },
                "last_modified_by": {
                    "title": "Last modified by",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "auth_service_hostname": {
                    "title": "Auth service hostname",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "access_key": {
                    "title": "Access key",
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 1
                },
                "secret_key": {
                    "title": "Secret key",
                    "type": "string",
                    "minLength": 1
                },
                "reuse_connections": {
                    "title": "Reuse connections",
                    "type": "boolean"
                },
                "cloud_url_path": {
                    "title": "Cloud url path",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "secure_communications": {
                    "title": "Secure communications",
                    "type": "boolean"
                },
                "bucket_name": {
                    "title": "Bucket name",
                    "type": "string",
                    "enum": [
                        "USE DNS",
                        "ON URL PATH"
                    ],
                    "x-nullable": true
                },
                "cloud_object_value": {
                    "title": "Cloud object value",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "cloud_object_abbr": {
                    "title": "Cloud object abbr",
                    "type": "string",
                    "enum": [
                        "MIB",
                        "KIB"
                    ]
                },
                "max_total_media": {
                    "title": "Max total media",
                    "type": "integer",
                    "maximum": 4294967295,
                    "minimum": 0
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                },
                "ae_backup_servers": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                }
            }
        },
        "WasabiCloudStorage": {
            "required": [
                "storage_device_name",
                "comments",
                "category_type",
                "storage_device_status",
                "access_key",
                "secret_key",
                "cloud_url_path",
                "cloud_object_value",
                "cloud_object_abbr",
                "max_total_media",
                "tags",
                "ae_backup_servers"
            ],
            "type": "object",
            "properties": {
                "storage_device_id": {
                    "title": "Storage device id",
                    "type": "integer",
                    "readOnly": true
                },
                "storage_device_name": {
                    "title": "Storage device name",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 1
                },
                "category_type": {
                    "title": "Category type",
                    "type": "integer"
                },
                "category_details": {
                    "$ref": "#/definitions/StorageCategoryTypeSerializer"
                },
                "storage_device_status": {
                    "title": "Storage device status",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "last_modified_date": {
                    "title": "Last modified date",
                    "type": "string",
                    "format": "date-time"
                },
                "last_modified_by": {
                    "title": "Last modified by",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "access_key": {
                    "title": "Access key",
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 1
                },
                "secret_key": {
                    "title": "Secret key",
                    "type": "string",
                    "minLength": 1
                },
                "reuse_connections": {
                    "title": "Reuse connections",
                    "type": "boolean"
                },
                "cloud_url_path": {
                    "title": "Cloud url path",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "secure_communications": {
                    "title": "Secure communications",
                    "type": "boolean"
                },
                "bucket_name": {
                    "title": "Bucket name",
                    "type": "string",
                    "enum": [
                        "USE DNS",
                        "ON URL PATH"
                    ],
                    "x-nullable": true
                },
                "cloud_object_value": {
                    "title": "Cloud object value",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "cloud_object_abbr": {
                    "title": "Cloud object abbr",
                    "type": "string",
                    "enum": [
                        "MIB",
                        "KIB"
                    ]
                },
                "max_total_media": {
                    "title": "Max total media",
                    "type": "integer",
                    "maximum": 4294967295,
                    "minimum": 0
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                },
                "ae_backup_servers": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                }
            }
        },
        "VTapeStorage": {
            "required": [
                "storage_device_name",
                "comments",
                "storage_device_status",
                "category_type",
                "tags",
                "ae_backup_servers"
            ],
            "type": "object",
            "properties": {
                "storage_device_id": {
                    "title": "Storage device id",
                    "type": "integer",
                    "readOnly": true
                },
                "storage_device_name": {
                    "title": "Storage device name",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 1
                },
                "storage_device_status": {
                    "title": "Storage device status",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "category_type": {
                    "title": "Category type",
                    "type": "integer"
                },
                "last_modified_date": {
                    "title": "Last modified date",
                    "type": "string",
                    "format": "date-time"
                },
                "last_modified_by": {
                    "title": "Last modified by",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "category_details": {
                    "$ref": "#/definitions/StorageCategoryTypeSerializer"
                },
                "root_path": {
                    "title": "Root path",
                    "type": "string",
                    "maxLength": 250,
                    "minLength": 1
                },
                "reserved_percent": {
                    "title": "Reserved percent",
                    "type": "integer",
                    "maximum": 4294967295,
                    "minimum": 0
                },
                "output_buffer_size": {
                    "title": "Output buffer size",
                    "type": "integer",
                    "maximum": 4294967295,
                    "minimum": 0
                },
                "output_buffer_abbr": {
                    "title": "Output buffer abbr",
                    "type": "string",
                    "enum": [
                        "m",
                        "k"
                    ]
                },
                "media_size": {
                    "title": "Media size",
                    "type": "number"
                },
                "media_size_attr": {
                    "title": "Media size attr",
                    "type": "string",
                    "enum": [
                        "m",
                        "k"
                    ]
                },
                "maximum_total_media": {
                    "title": "Maximum total media",
                    "type": "integer",
                    "maximum": 4294967295,
                    "minimum": 0
                },
                "determine_media_size": {
                    "title": "Determine media size",
                    "type": "boolean"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                },
                "ae_backup_servers": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                }
            }
        },
        "Disk": {
            "required": [
                "storage_device_name",
                "category_type",
                "comments",
                "storage_device_status",
                "tags",
                "ae_backup_servers"
            ],
            "type": "object",
            "properties": {
                "storage_device_id": {
                    "title": "Storage device id",
                    "type": "integer",
                    "readOnly": true
                },
                "storage_device_name": {
                    "title": "Storage device name",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1
                },
                "category_type": {
                    "title": "Category type",
                    "type": "integer"
                },
                "category_details": {
                    "$ref": "#/definitions/StorageCategoryTypeSerializer"
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 1
                },
                "storage_device_status": {
                    "title": "Storage device status",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "root_path": {
                    "title": "Root path",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "output_buffer_size": {
                    "title": "Output buffer size",
                    "type": "integer",
                    "maximum": 4294967295,
                    "minimum": 0
                },
                "output_buffer_abbr": {
                    "title": "Output buffer abbr",
                    "type": "string",
                    "enum": [
                        "MIB",
                        "KIB"
                    ]
                },
                "last_modified_by": {
                    "title": "Last modified by",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                },
                "ae_backup_servers": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                }
            }
        },
        "NDMPChanger": {
            "required": [
                "storage_device_name",
                "comments",
                "storage_device_status",
                "category_type",
                "ndmp_chgr_username",
                "ndmp_chgr_password",
                "ndmp_chgr_auth_type",
                "ndmp_chgr_appl_location",
                "tags",
                "ae_backup_servers"
            ],
            "type": "object",
            "properties": {
                "storage_device_id": {
                    "title": "Storage device id",
                    "type": "integer",
                    "readOnly": true
                },
                "storage_device_name": {
                    "title": "Storage device name",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 1
                },
                "storage_device_status": {
                    "title": "Storage device status",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "category_type": {
                    "title": "Category type",
                    "type": "integer"
                },
                "last_modified_date": {
                    "title": "Last modified date",
                    "type": "string",
                    "format": "date-time"
                },
                "last_modified_by": {
                    "title": "Last modified by",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "category_details": {
                    "$ref": "#/definitions/StorageCategoryTypeSerializer"
                },
                "output_buffer_size": {
                    "title": "Output buffer size",
                    "type": "integer",
                    "maximum": 4294967295,
                    "minimum": 0
                },
                "output_buffer_abbr": {
                    "title": "Output buffer abbr",
                    "type": "string",
                    "enum": [
                        "m",
                        "k"
                    ]
                },
                "next_drive_strategy": {
                    "title": "Next drive strategy",
                    "type": "string",
                    "enum": [
                        "Least Recently Used",
                        "First Available"
                    ]
                },
                "bar_code_reader": {
                    "title": "Bar code reader",
                    "type": "boolean"
                },
                "status_poll_interval": {
                    "title": "Status poll interval",
                    "type": "integer",
                    "maximum": 4294967295,
                    "minimum": 0
                },
                "unload_delay": {
                    "title": "Unload delay",
                    "type": "integer",
                    "maximum": 4294967295,
                    "minimum": 0
                },
                "eject_delay": {
                    "title": "Eject delay",
                    "type": "integer",
                    "maximum": 4294967295,
                    "minimum": 0
                },
                "first_poll": {
                    "title": "First poll",
                    "type": "integer",
                    "maximum": 4294967295,
                    "minimum": 0
                },
                "poll_frequency": {
                    "title": "Poll frequency",
                    "type": "integer",
                    "maximum": 4294967295,
                    "minimum": 0
                },
                "max_wait_for_ready": {
                    "title": "Max wait for ready",
                    "type": "integer",
                    "maximum": 4294967295,
                    "minimum": 0
                },
                "ndmp_chgr_username": {
                    "title": "Ndmp chgr username",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "ndmp_chgr_password": {
                    "title": "Ndmp chgr password",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "ndmp_chgr_auth_type": {
                    "title": "Ndmp chgr auth type",
                    "type": "string",
                    "enum": [
                        "MD5",
                        "TEXT",
                        "EMPTY AUTHENTICATION ATTEMPT",
                        "NO AUTHENTICATION ATTEMPT"
                    ]
                },
                "tape_size": {
                    "title": "Tape size",
                    "type": "integer",
                    "maximum": 4294967295,
                    "minimum": 0,
                    "x-nullable": true
                },
                "tape_size_abbr": {
                    "title": "Tape size abbr",
                    "type": "string",
                    "enum": [
                        "t",
                        "g",
                        "m"
                    ],
                    "x-nullable": true
                },
                "ndmp_chgr_appl_location": {
                    "title": "Ndmp chgr appl location",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                },
                "ae_backup_servers": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                },
                "tape_drives": {
                    "title": "Tape drives",
                    "type": "string",
                    "x-nullable": true
                }
            }
        },
        "TapeChanger": {
            "required": [
                "storage_device_name",
                "comments",
                "storage_device_status",
                "category_type",
                "tags",
                "ae_backup_servers"
            ],
            "type": "object",
            "properties": {
                "storage_device_id": {
                    "title": "Storage device id",
                    "type": "integer",
                    "readOnly": true
                },
                "storage_device_name": {
                    "title": "Storage device name",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 1
                },
                "storage_device_status": {
                    "title": "Storage device status",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "category_type": {
                    "title": "Category type",
                    "type": "integer"
                },
                "last_modified_date": {
                    "title": "Last modified date",
                    "type": "string",
                    "format": "date-time"
                },
                "last_modified_by": {
                    "title": "Last modified by",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "tape_changer": {
                    "title": "Tape changer",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1,
                    "x-nullable": true
                },
                "changer_path": {
                    "title": "Changer path",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1,
                    "x-nullable": true
                },
                "category_details": {
                    "$ref": "#/definitions/StorageCategoryTypeSerializer"
                },
                "output_buffer_size": {
                    "title": "Output buffer size",
                    "type": "integer",
                    "maximum": 4294967295,
                    "minimum": 0
                },
                "output_buffer_abbr": {
                    "title": "Output buffer abbr",
                    "type": "string",
                    "enum": [
                        "m",
                        "k"
                    ]
                },
                "next_drive_strategy": {
                    "title": "Next drive strategy",
                    "type": "string",
                    "enum": [
                        "Least Recently Used",
                        "First Available"
                    ]
                },
                "bar_code_reader": {
                    "title": "Bar code reader",
                    "type": "boolean"
                },
                "status_poll_interval": {
                    "title": "Status poll interval",
                    "type": "integer",
                    "maximum": 4294967295,
                    "minimum": 0
                },
                "unload_delay": {
                    "title": "Unload delay",
                    "type": "integer",
                    "maximum": 4294967295,
                    "minimum": 0
                },
                "eject_delay": {
                    "title": "Eject delay",
                    "type": "integer",
                    "maximum": 4294967295,
                    "minimum": 0
                },
                "first_poll": {
                    "title": "First poll",
                    "type": "integer",
                    "maximum": 4294967295,
                    "minimum": 0
                },
                "poll_frequency": {
                    "title": "Poll frequency",
                    "type": "integer",
                    "maximum": 4294967295,
                    "minimum": 0
                },
                "max_wait_for_ready": {
                    "title": "Max wait for ready",
                    "type": "integer",
                    "maximum": 4294967295,
                    "minimum": 0
                },
                "tape_size": {
                    "title": "Tape size",
                    "type": "integer",
                    "maximum": 4294967295,
                    "minimum": 0,
                    "x-nullable": true
                },
                "tape_size_abbr": {
                    "title": "Tape size abbr",
                    "type": "string",
                    "enum": [
                        "t",
                        "g",
                        "m"
                    ],
                    "x-nullable": true
                },
                "remove_tape": {
                    "title": "Remove tape",
                    "type": "boolean",
                    "x-nullable": true
                },
                "mt_offline": {
                    "title": "Mt offline",
                    "type": "boolean",
                    "x-nullable": true
                },
                "total_slots": {
                    "title": "Total slots",
                    "type": "integer",
                    "maximum": 4294967295,
                    "minimum": 0
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                },
                "ae_backup_servers": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                },
                "tape_drives": {
                    "title": "Tape drives",
                    "type": "string",
                    "x-nullable": true
                }
            }
        },
        "Statement": {
            "required": [
                "entity_name",
                "action"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "integer",
                    "readOnly": true
                },
                "entity_name": {
                    "title": "Entity name",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                },
                "action": {
                    "title": "Action",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                }
            }
        },
        "Policy": {
            "required": [
                "name",
                "statements"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "statements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Statement"
                    }
                },
                "is_default": {
                    "title": "Is default",
                    "type": "boolean"
                }
            }
        },
        "Role": {
            "required": [
                "name",
                "policies"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "x-nullable": true
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Policy"
                    }
                },
                "is_default": {
                    "title": "Is default",
                    "type": "boolean"
                }
            }
        },
        "CurrentUser": {
            "required": [
                "username",
                "email"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "username": {
                    "title": "Username",
                    "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                    "type": "string",
                    "pattern": "^[\\w.@+-]+$",
                    "maxLength": 150,
                    "minLength": 1
                },
                "email": {
                    "title": "Email",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "network_ID": {
                    "title": "Network ID",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "x-nullable": true
                },
                "network_sessioniID": {
                    "title": "Network sessioniID",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "x-nullable": true
                },
                "registeration_date": {
                    "title": "Registeration date",
                    "type": "string",
                    "format": "date"
                },
                "security_preference": {
                    "title": "Security preference",
                    "type": "integer",
                    "maximum": 65535,
                    "minimum": 0,
                    "x-nullable": true
                },
                "last_page": {
                    "title": "Last page",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "x-nullable": true
                },
                "last_configuration": {
                    "title": "Last configuration",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "x-nullable": true
                },
                "session_timeout": {
                    "title": "Session timeout",
                    "type": "integer",
                    "maximum": 4294967295,
                    "minimum": 0,
                    "x-nullable": true
                },
                "live_mode": {
                    "title": "Live mode",
                    "type": "integer",
                    "maximum": 4294967295,
                    "minimum": 0,
                    "x-nullable": true
                },
                "show_starter_page": {
                    "title": "Show starter page",
                    "type": "integer",
                    "maximum": 65535,
                    "minimum": 0,
                    "x-nullable": true
                },
                "debug": {
                    "title": "Debug",
                    "type": "integer",
                    "maximum": 65535,
                    "minimum": 0,
                    "x-nullable": true
                },
                "lastlogin_date": {
                    "title": "Lastlogin date",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "role_details": {
                    "$ref": "#/definitions/Role"
                },
                "zmc_tour": {
                    "title": "Zmc tour",
                    "type": "boolean"
                },
                "ldap_domain": {
                    "title": "Ldap domain",
                    "type": "integer",
                    "x-nullable": true
                },
                "ldap_domain_name": {
                    "title": "Ldap domain name",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ChangeUserType": {
            "required": [
                "username",
                "email",
                "role"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "username": {
                    "title": "Username",
                    "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                    "type": "string",
                    "pattern": "^[\\w.@+-]+$",
                    "maxLength": 150,
                    "minLength": 1
                },
                "email": {
                    "title": "Email",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "role": {
                    "title": "Role",
                    "type": "integer"
                },
                "ldap_domain": {
                    "title": "Ldap domain",
                    "type": "integer",
                    "x-nullable": true
                },
                "password": {
                    "title": "Password",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                },
                "role_data": {
                    "title": "Role data",
                    "type": "string",
                    "readOnly": true
                },
                "ldap_domain_data": {
                    "title": "Ldap domain data",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "LDAPUser": {
            "required": [
                "first_name",
                "last_name",
                "email",
                "username"
            ],
            "type": "object",
            "properties": {
                "first_name": {
                    "title": "First name",
                    "type": "string"
                },
                "last_name": {
                    "title": "Last name",
                    "type": "string"
                },
                "email": {
                    "title": "Email",
                    "type": "string"
                },
                "username": {
                    "title": "Username",
                    "type": "string"
                }
            }
        },
        "MultipleUsersAdd": {
            "required": [
                "ldap_domain_id",
                "role_id",
                "users"
            ],
            "type": "object",
            "properties": {
                "ldap_domain_id": {
                    "title": "Ldap domain id",
                    "type": "integer"
                },
                "role_id": {
                    "title": "Role id",
                    "type": "integer"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LDAPUser"
                    }
                }
            }
        },
        "LDAPDomain": {
            "required": [
                "uri",
                "domain_name",
                "base_dn",
                "master_user_dn",
                "master_user_password"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "uri": {
                    "title": "Uri",
                    "description": "ip or hostname of AD",
                    "type": "string",
                    "minLength": 6
                },
                "domain_name": {
                    "title": "Domain name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 6
                },
                "base_dn": {
                    "title": "Base dn",
                    "description": "base dn is the point from where a server will search for users [dc=example,dc=com]",
                    "type": "string",
                    "minLength": 6
                },
                "master_user_dn": {
                    "title": "Master user dn",
                    "description": "DN of user with binding access",
                    "type": "string",
                    "minLength": 6
                },
                "master_user_password": {
                    "title": "Master user password",
                    "type": "string",
                    "minLength": 6
                },
                "usr_attr_mapping": {
                    "title": "Usr attr mapping",
                    "description": "Requires dictionary. { email: mail/userprincipalname }",
                    "type": "string",
                    "minLength": 1,
                    "x-nullable": true
                },
                "username_identifier": {
                    "title": "Username identifier",
                    "description": "Use samaccountname/uid if username is to be used on login OR use mail/userprincipalname if email is to be used on login.",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "x-nullable": true
                },
                "use_ssl": {
                    "title": "Use ssl",
                    "type": "boolean"
                },
                "is_active": {
                    "title": "Is active",
                    "type": "boolean"
                },
                "cert_file": {
                    "title": "Cert file",
                    "description": ".cer/.pem file for ssl",
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true,
                    "format": "uri"
                }
            }
        },
        "LDAPSearch": {
            "type": "object",
            "properties": {
                "type": {
                    "title": "Type",
                    "type": "string",
                    "enum": [
                        "user",
                        "group"
                    ],
                    "default": ""
                },
                "by": {
                    "title": "By",
                    "type": "string",
                    "enum": [
                        "email",
                        "group"
                    ],
                    "default": ""
                },
                "value": {
                    "title": "Value",
                    "type": "string",
                    "default": ""
                }
            }
        },
        "TokenRefresh": {
            "required": [
                "refresh"
            ],
            "type": "object",
            "properties": {
                "refresh": {
                    "title": "Refresh",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "MyTokenObtainPair": {
            "required": [
                "username",
                "password"
            ],
            "type": "object",
            "properties": {
                "username": {
                    "title": "Username",
                    "type": "string",
                    "minLength": 1
                },
                "password": {
                    "title": "Password",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "Vault": {
            "required": [
                "backup_level"
            ],
            "type": "object",
            "properties": {
                "vault_id": {
                    "title": "Vault id",
                    "type": "integer",
                    "readOnly": true
                },
                "backupsetname": {
                    "title": "Backupsetname",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "schedulename": {
                    "title": "Schedulename",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "storagename": {
                    "title": "Storagename",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1,
                    "x-nullable": true
                },
                "storage_device_id": {
                    "title": "Storage device id",
                    "type": "integer",
                    "readOnly": true
                },
                "config_synced": {
                    "title": "Config synced",
                    "type": "boolean",
                    "x-nullable": true
                },
                "active": {
                    "title": "Active",
                    "type": "boolean"
                },
                "created_time": {
                    "title": "Created time",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "backup_level": {
                    "title": "Backup level",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "backup_run_from": {
                    "title": "Backup run from",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "backup_run_to": {
                    "title": "Backup run to",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "tape_storage_details": {
                    "title": "Tape storage details",
                    "type": "string",
                    "minLength": 1,
                    "x-nullable": true
                },
                "vault_s3_bucket_location": {
                    "title": "Vault s3 bucket location",
                    "type": "string",
                    "maxLength": 256,
                    "x-nullable": true
                },
                "vault_s3_bucket_name": {
                    "title": "Vault s3 bucket name",
                    "type": "string",
                    "maxLength": 256,
                    "x-nullable": true
                }
            }
        }
    }
}